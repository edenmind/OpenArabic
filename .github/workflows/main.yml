name: Build and Push

env:
  REGISTRY_NAME: docker.io/therealedenmind
  CLUSTER_NAME: edenmind-aks
  CLUSTER_RESOURCE_GROUP: edenmind-aks-resources

on:
  push:
    branches: [main]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Chek out source
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker Login
        uses: docker/login-action@v1.6.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push API
        uses: docker/build-push-action@v2.0.0
        with:
          file: ./api/Dockerfile
          tags: therealedenmind/oa-api:${{ github.sha }}
          context: ./api
          push: true

      - name: Build and push web
        uses: docker/build-push-action@v2.0.0
        with:
          file: ./web/Dockerfile
          tags: therealedenmind/oa-frontend:${{ github.sha }}
          context: ./web
          push: true

      - name: Set target AKS cluster
        uses: Azure/aks-set-context@v1
        with:
          creds: "${{ secrets.AZURE_CREDENTIALS }}"
          cluster-name: ${{ env.CLUSTER_NAME }}
          resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}

      - name: Create secret in Kubernetes cluster
        uses: Azure/k8s-create-secret@v1.1
        with:
          secret-type: generic
          secret-name: api-credentials
          arguments: |
            --from-literal=ASPNETCORE_AUTHORITY=${{ secrets.ASPNETCORE_AUTHORITY }}
            --from-literal=ASPNETCORE_AUDIENCE=${{ secrets.ASPNETCORE_AUDIENCE }}
            --from-literal=ASPNETCORE_ORIGINS=${{ secrets.ASPNETCORE_ORIGINS }}
            --from-literal=ASPNETCORE_SENDGRID_KEY=${{ secrets.ASPNETCORE_SENDGRID_KEY }}   
            --from-literal=ASPNETCORE_CONNECTION_STRING="${{ secrets.ASPNETCORE_CONNECTION_STRING }}"

      - name: Create secret in Kubernetes cluster for database
        uses: Azure/k8s-create-secret@v1.1
        with:
          secret-type: generic
          secret-name: database-credentials
          arguments: |
            --from-literal=SA_PASSWORD=${{ secrets.SA_PASSWORD }}

      - name: Replace sha tag for containers
        uses: cschleiden/replace-tokens@v1
        with:
          files: '["./k8s/manifests/*.yaml"]'
        env:
          API_TAG: therealedenmind/oa-api:${{ github.sha }}
          FRONTEND_TAG: therealedenmind/oa-frontend:${{ github.sha }}

      - name: Replace sha in footer
        uses: cschleiden/replace-tokens@v1
        with:
          files: '["./web/src/app/footer/*.html"]'
        env:
          SHA_LINK: ${{ github.sha }}

      - name: Deploy API, Frontend and Database to AKS
        uses: Azure/k8s-deploy@v1
        with:
          manifests: |
            ./k8s/manifests/web.yaml
            ./k8s/manifests/api.yaml
            ./k8s/manifests/database.yaml
