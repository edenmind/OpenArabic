name: test-and-lint
on:
  push:
    branches-ignore: [main]
jobs:
  test-and-lint:
    runs-on: ubuntu-latest
    permissions: write-all
    services:
      mongodb:
        image: mongo:5-focal
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: password
          MONGO_INITDB_DATABASE: openarabic

    steps:
      - uses: actions/checkout@v3

      - name: üçÉ Install mongosh
        run: |
          sudo apt-get update
          sudo apt-get install -y wget gnupg
          wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | sudo apt-key add -
          echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list
          sudo apt-get update
          sudo apt-get install -y mongodb-mongosh

      - name: üèó  Initialize MongoDB
        run: |
          mongosh --host localhost --port 27017 --username root --password password --authenticationDatabase "admin" --file ./database/init-database-and-user.js

      - name: üèó  Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          check-latest: true

      - name: üß™  Test and Lint API
        working-directory: ./api
        env:
          PORT: 3030
          MONGO_DB_URL: mongodb://user:password@localhost:27017/openarabic
          TASHKEEL_URL: http://localhost:3020
        run: |
          yarn install
          #yarn lint
          yarn test

      - name: üß™  Test and Lint Mobile
        working-directory: ./mobile
        run: |
          yarn install
          #yarn lint
          yarn test

      - name: üß™  Test and Lint Web
        working-directory: ./web
        run: |
          yarn install
          #yarn lint
          yarn test

      - name: ‚úÖ  Tests
        if: ${{ success() }}
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "context": "tests",
            "state": "success",
            "description": "Tests passed",
            "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }'

      - name: üö®  Tests
        if: ${{ failure() }}
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "context": "tests",
            "state": "failure",
            "description": "Tests failed",
            "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }'

      - name: Code Coverage Report for Mobile
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: ./mobile/coverage/cobertura-coverage.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: "50 60"

      - uses: jwalton/gh-find-current-pr@v1
        id: finder

      - name: Add Coverage PR Comment for Mobile
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          number: ${{ steps.finder.outputs.pr }}
          recreate: true
          path: code-coverage-results.md

      - name: Code Coverage Report for API
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: ./api/coverage/cobertura-coverage.xml
          badge: true
          fail_below_min: false
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: "50 60"

      - name: Add Coverage PR Comment for API
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          number: ${{ steps.finder.outputs.pr }}
          recreate: true
          path: code-coverage-results.md