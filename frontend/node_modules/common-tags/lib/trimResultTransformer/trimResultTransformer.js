"use strict";

exports.__esModule = true;
exports["default"] = void 0;
var supportedSides = ['', 'start', 'left', 'end', 'right', 'smart'];
/**
 * TemplateTag transformer that trims whitespace on the end result of a tagged template
 * @param  {String} side = '' - The side of the string to trim. Can be 'start' or 'end' (alternatively 'left' or 'right')
 * @return {Object}           - a TemplateTag transformer
 */

var trimResultTransformer = function trimResultTransformer(side) {
  if (side === void 0) {
    side = '';
  }

  if (!supportedSides.includes(side)) {
    throw new Error("Side not supported: " + side);
  }

  return {
    onEndResult: function onEndResult(endResult) {
      switch (side) {
        case '':
          return endResult.trim();

        case 'start':
        case 'left':
          return endResult.replace(/^\s*/, '');

        case 'end':
        case 'right':
          return endResult.replace(/\s*$/, '');

        case 'smart':
          return endResult.replace(/[^\S\n]+$/gm, '').replace(/^\n/, '');
      }
    }
  };
};

var _default = trimResultTransformer;
exports["default"] = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90cmltUmVzdWx0VHJhbnNmb3JtZXIvdHJpbVJlc3VsdFRyYW5zZm9ybWVyLmpzIl0sIm5hbWVzIjpbInN1cHBvcnRlZFNpZGVzIiwidHJpbVJlc3VsdFRyYW5zZm9ybWVyIiwic2lkZSIsImluY2x1ZGVzIiwiRXJyb3IiLCJvbkVuZFJlc3VsdCIsImVuZFJlc3VsdCIsInRyaW0iLCJyZXBsYWNlIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUEsSUFBTUEsY0FBYyxHQUFHLENBQUMsRUFBRCxFQUFLLE9BQUwsRUFBYyxNQUFkLEVBQXNCLEtBQXRCLEVBQTZCLE9BQTdCLEVBQXNDLE9BQXRDLENBQXZCO0FBRUE7Ozs7OztBQUtBLElBQU1DLHFCQUFxQixHQUFHLFNBQXhCQSxxQkFBd0IsQ0FBQ0MsSUFBRCxFQUFlO0FBQUEsTUFBZEEsSUFBYztBQUFkQSxJQUFBQSxJQUFjLEdBQVAsRUFBTztBQUFBOztBQUMzQyxNQUFJLENBQUNGLGNBQWMsQ0FBQ0csUUFBZixDQUF3QkQsSUFBeEIsQ0FBTCxFQUFvQztBQUNsQyxVQUFNLElBQUlFLEtBQUosMEJBQWlDRixJQUFqQyxDQUFOO0FBQ0Q7O0FBRUQsU0FBTztBQUNMRyxJQUFBQSxXQURLLHVCQUNPQyxTQURQLEVBQ2tCO0FBQ3JCLGNBQVFKLElBQVI7QUFDRSxhQUFLLEVBQUw7QUFDRSxpQkFBT0ksU0FBUyxDQUFDQyxJQUFWLEVBQVA7O0FBRUYsYUFBSyxPQUFMO0FBQ0EsYUFBSyxNQUFMO0FBQ0UsaUJBQU9ELFNBQVMsQ0FBQ0UsT0FBVixDQUFrQixNQUFsQixFQUEwQixFQUExQixDQUFQOztBQUVGLGFBQUssS0FBTDtBQUNBLGFBQUssT0FBTDtBQUNFLGlCQUFPRixTQUFTLENBQUNFLE9BQVYsQ0FBa0IsTUFBbEIsRUFBMEIsRUFBMUIsQ0FBUDs7QUFFRixhQUFLLE9BQUw7QUFDRSxpQkFBT0YsU0FBUyxDQUFDRSxPQUFWLENBQWtCLGFBQWxCLEVBQWlDLEVBQWpDLEVBQXFDQSxPQUFyQyxDQUE2QyxLQUE3QyxFQUFvRCxFQUFwRCxDQUFQO0FBYko7QUFlRDtBQWpCSSxHQUFQO0FBbUJELENBeEJEOztlQTBCZVAscUIiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBzdXBwb3J0ZWRTaWRlcyA9IFsnJywgJ3N0YXJ0JywgJ2xlZnQnLCAnZW5kJywgJ3JpZ2h0JywgJ3NtYXJ0J107XG5cbi8qKlxuICogVGVtcGxhdGVUYWcgdHJhbnNmb3JtZXIgdGhhdCB0cmltcyB3aGl0ZXNwYWNlIG9uIHRoZSBlbmQgcmVzdWx0IG9mIGEgdGFnZ2VkIHRlbXBsYXRlXG4gKiBAcGFyYW0gIHtTdHJpbmd9IHNpZGUgPSAnJyAtIFRoZSBzaWRlIG9mIHRoZSBzdHJpbmcgdG8gdHJpbS4gQ2FuIGJlICdzdGFydCcgb3IgJ2VuZCcgKGFsdGVybmF0aXZlbHkgJ2xlZnQnIG9yICdyaWdodCcpXG4gKiBAcmV0dXJuIHtPYmplY3R9ICAgICAgICAgICAtIGEgVGVtcGxhdGVUYWcgdHJhbnNmb3JtZXJcbiAqL1xuY29uc3QgdHJpbVJlc3VsdFRyYW5zZm9ybWVyID0gKHNpZGUgPSAnJykgPT4ge1xuICBpZiAoIXN1cHBvcnRlZFNpZGVzLmluY2x1ZGVzKHNpZGUpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBTaWRlIG5vdCBzdXBwb3J0ZWQ6ICR7c2lkZX1gKTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgb25FbmRSZXN1bHQoZW5kUmVzdWx0KSB7XG4gICAgICBzd2l0Y2ggKHNpZGUpIHtcbiAgICAgICAgY2FzZSAnJzpcbiAgICAgICAgICByZXR1cm4gZW5kUmVzdWx0LnRyaW0oKTtcblxuICAgICAgICBjYXNlICdzdGFydCc6XG4gICAgICAgIGNhc2UgJ2xlZnQnOlxuICAgICAgICAgIHJldHVybiBlbmRSZXN1bHQucmVwbGFjZSgvXlxccyovLCAnJyk7XG5cbiAgICAgICAgY2FzZSAnZW5kJzpcbiAgICAgICAgY2FzZSAncmlnaHQnOlxuICAgICAgICAgIHJldHVybiBlbmRSZXN1bHQucmVwbGFjZSgvXFxzKiQvLCAnJyk7XG5cbiAgICAgICAgY2FzZSAnc21hcnQnOlxuICAgICAgICAgIHJldHVybiBlbmRSZXN1bHQucmVwbGFjZSgvW15cXFNcXG5dKyQvZ20sICcnKS5yZXBsYWNlKC9eXFxuLywgJycpO1xuICAgICAgfVxuICAgIH0sXG4gIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCB0cmltUmVzdWx0VHJhbnNmb3JtZXI7XG4iXX0=