{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _InputBase;\n\nconst _excluded = [\"ActionsComponent\", \"backIconButtonProps\", \"className\", \"colSpan\", \"component\", \"count\", \"getItemAriaLabel\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"onPageChange\", \"onRowsPerPageChange\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\", \"showFirstButton\", \"showLastButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, isHostComponent } from '@mui/core';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/useId';\nimport tablePaginationClasses, { getTablePaginationUtilityClass } from './tablePaginationClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TablePaginationRoot = styled(TableCell, {\n  name: 'MuiTablePagination',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    overflow: 'auto',\n    color: theme.palette.text.primary,\n    fontSize: theme.typography.pxToRem(14),\n    // Increase the specificity to override TableCell.\n    '&:last-child': {\n      padding: 0\n    }\n  };\n});\nconst TablePaginationToolbar = styled(Toolbar, {\n  name: 'MuiTablePagination',\n  slot: 'Toolbar',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${tablePaginationClasses.actions}`]: styles.actions\n  }, styles.toolbar)\n})(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    minHeight: 52,\n    paddingRight: 2,\n    [`${theme.breakpoints.up('xs')} and (orientation: landscape)`]: {\n      minHeight: 52\n    },\n    [theme.breakpoints.up('sm')]: {\n      minHeight: 52,\n      paddingRight: 2\n    },\n    [`& .${tablePaginationClasses.actions}`]: {\n      flexShrink: 0,\n      marginLeft: 20\n    }\n  };\n});\nconst TablePaginationSpacer = styled('div', {\n  name: 'MuiTablePagination',\n  slot: 'Spacer',\n  overridesResolver: (props, styles) => styles.spacer\n})({\n  flex: '1 1 100%'\n});\nconst TablePaginationSelectLabel = styled('p', {\n  name: 'MuiTablePagination',\n  slot: 'SelectLabel',\n  overridesResolver: (props, styles) => styles.selectLabel\n})(_ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return _extends({}, theme.typography.body2, {\n    flexShrink: 0\n  });\n});\nconst TablePaginationSelect = styled(Select, {\n  name: 'MuiTablePagination',\n  slot: 'Select',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${tablePaginationClasses.selectIcon}`]: styles.selectIcon,\n    [`& .${tablePaginationClasses.select}`]: styles.select\n  }, styles.input, styles.selectRoot)\n})({\n  color: 'inherit',\n  fontSize: 'inherit',\n  flexShrink: 0,\n  marginRight: 32,\n  marginLeft: 8,\n  [`& .${tablePaginationClasses.select}`]: {\n    paddingLeft: 8,\n    paddingRight: 24,\n    textAlign: 'right',\n    textAlignLast: 'right' // Align <select> on Chrome.\n\n  }\n});\nconst TablePaginationMenuItem = styled(MenuItem, {\n  name: 'MuiTablePagination',\n  slot: 'MenuItem',\n  overridesResolver: (props, styles) => styles.menuItem\n})({});\nconst TablePaginationDisplayedRows = styled('p', {\n  name: 'MuiTablePagination',\n  slot: 'DisplayedRows',\n  overridesResolver: (props, styles) => styles.displayedRows\n})(_ref4 => {\n  let {\n    theme\n  } = _ref4;\n  return _extends({}, theme.typography.body2, {\n    flexShrink: 0\n  });\n});\n\nfunction defaultLabelDisplayedRows(_ref5) {\n  let {\n    from,\n    to,\n    count\n  } = _ref5;\n  return `${from}-${to} of ${count !== -1 ? count : `more than ${to}`}`;\n}\n\nfunction defaultGetAriaLabel(type) {\n  return `Go to ${type} page`;\n}\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    toolbar: ['toolbar'],\n    spacer: ['spacer'],\n    selectLabel: ['selectLabel'],\n    select: ['select'],\n    input: ['input'],\n    selectIcon: ['selectIcon'],\n    menuItem: ['menuItem'],\n    displayedRows: ['displayedRows'],\n    actions: ['actions']\n  };\n  return composeClasses(slots, getTablePaginationUtilityClass, classes);\n};\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\n\nconst TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTablePagination'\n  });\n\n  const {\n    ActionsComponent = TablePaginationActions,\n    backIconButtonProps,\n    className,\n    colSpan: colSpanProp,\n    component = TableCell,\n    count,\n    getItemAriaLabel = defaultGetAriaLabel,\n    labelDisplayedRows = defaultLabelDisplayedRows,\n    labelRowsPerPage = 'Rows per page:',\n    nextIconButtonProps,\n    onPageChange,\n    onRowsPerPageChange,\n    page,\n    rowsPerPage,\n    rowsPerPageOptions = [10, 25, 50, 100],\n    SelectProps = {},\n    showFirstButton = false,\n    showLastButton = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const MenuItemComponent = SelectProps.native ? 'option' : TablePaginationMenuItem;\n  let colSpan;\n\n  if (component === TableCell || component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  const selectId = useId(SelectProps.id);\n  const labelId = useId(SelectProps.labelId);\n\n  const getLabelDisplayedRowsTo = () => {\n    if (count === -1) {\n      return (page + 1) * rowsPerPage;\n    }\n\n    return rowsPerPage === -1 ? count : Math.min(count, (page + 1) * rowsPerPage);\n  };\n\n  return /*#__PURE__*/_jsx(TablePaginationRoot, _extends({\n    colSpan: colSpan,\n    ref: ref,\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsxs(TablePaginationToolbar, {\n      className: classes.toolbar,\n      children: [/*#__PURE__*/_jsx(TablePaginationSpacer, {\n        className: classes.spacer\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(TablePaginationSelectLabel, {\n        className: classes.selectLabel,\n        id: labelId,\n        children: labelRowsPerPage\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(TablePaginationSelect, _extends({\n        variant: \"standard\",\n        input: _InputBase || (_InputBase = /*#__PURE__*/_jsx(InputBase, {})),\n        value: rowsPerPage,\n        onChange: onRowsPerPageChange,\n        id: selectId,\n        labelId: labelId\n      }, SelectProps, {\n        classes: _extends({}, SelectProps.classes, {\n          // TODO v5 remove `classes.input`\n          root: clsx(classes.input, classes.selectRoot, (SelectProps.classes || {}).root),\n          select: clsx(classes.select, (SelectProps.classes || {}).select),\n          // TODO v5 remove `selectIcon`\n          icon: clsx(classes.selectIcon, (SelectProps.classes || {}).icon)\n        }),\n        children: rowsPerPageOptions.map(rowsPerPageOption => /*#__PURE__*/_createElement(MenuItemComponent, _extends({}, !isHostComponent(MenuItemComponent) && {\n          ownerState\n        }, {\n          className: classes.menuItem,\n          key: rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption,\n          value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n        }), rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption))\n      })), /*#__PURE__*/_jsx(TablePaginationDisplayedRows, {\n        className: classes.displayedRows,\n        children: labelDisplayedRows({\n          from: count === 0 ? 0 : page * rowsPerPage + 1,\n          to: getLabelDisplayedRowsTo(),\n          count: count === -1 ? -1 : count,\n          page\n        })\n      }), /*#__PURE__*/_jsx(ActionsComponent, {\n        className: classes.actions,\n        backIconButtonProps: backIconButtonProps,\n        count: count,\n        nextIconButtonProps: nextIconButtonProps,\n        onPageChange: onPageChange,\n        page: page,\n        rowsPerPage: rowsPerPage,\n        showFirstButton: showFirstButton,\n        showLastButton: showLastButton,\n        getItemAriaLabel: getItemAriaLabel\n      })]\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   * @default TablePaginationActions\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: integerPropType.isRequired,\n\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   * This is important for screen reader users.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').\n   * @returns {string}\n   * @default function defaultGetAriaLabel(type) {\n   *   return `Go to ${type} page`;\n   * }\n   */\n  getItemAriaLabel: PropTypes.func,\n\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default function defaultLabelDisplayedRows({ from, to, count }) {\n   *   return `${from}-${to} of ${count !== -1 ? count : `more than ${to}`}`;\n   * }\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Rows per page:'\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.\n   */\n  onRowsPerPageChange: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(integerPropType.isRequired, props => {\n    const {\n      count,\n      page,\n      rowsPerPage\n    } = props;\n\n    if (count === -1) {\n      return null;\n    }\n\n    const newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('MUI: The page prop of a TablePagination is out of range ' + `(0 to ${newLastPage}, but page is ${page}).`);\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   *\n   * Set -1 to display all the rows.\n   */\n  rowsPerPage: integerPropType.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   * Use -1 for the value with a custom label to show all the rows.\n   * @default [10, 25, 50, 100]\n   */\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   * @default {}\n   */\n  SelectProps: PropTypes.object,\n\n  /**\n   * If `true`, show the first-page button.\n   * @default false\n   */\n  showFirstButton: PropTypes.bool,\n\n  /**\n   * If `true`, show the last-page button.\n   * @default false\n   */\n  showLastButton: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TablePagination;","map":{"version":3,"sources":["/Users/jonas/Documents/GitHub/OpenArabic/frontend/node_modules/@mui/material/TablePagination/TablePagination.js"],"names":["_objectWithoutPropertiesLoose","_extends","_InputBase","_excluded","React","PropTypes","clsx","chainPropTypes","integerPropType","unstable_composeClasses","composeClasses","isHostComponent","styled","useThemeProps","InputBase","MenuItem","Select","TableCell","Toolbar","TablePaginationActions","useId","tablePaginationClasses","getTablePaginationUtilityClass","jsx","_jsx","createElement","_createElement","jsxs","_jsxs","TablePaginationRoot","name","slot","overridesResolver","props","styles","root","theme","overflow","color","palette","text","primary","fontSize","typography","pxToRem","padding","TablePaginationToolbar","actions","toolbar","minHeight","paddingRight","breakpoints","up","flexShrink","marginLeft","TablePaginationSpacer","spacer","flex","TablePaginationSelectLabel","selectLabel","body2","TablePaginationSelect","selectIcon","select","input","selectRoot","marginRight","paddingLeft","textAlign","textAlignLast","TablePaginationMenuItem","menuItem","TablePaginationDisplayedRows","displayedRows","defaultLabelDisplayedRows","from","to","count","defaultGetAriaLabel","type","useUtilityClasses","ownerState","classes","slots","TablePagination","forwardRef","inProps","ref","ActionsComponent","backIconButtonProps","className","colSpan","colSpanProp","component","getItemAriaLabel","labelDisplayedRows","labelRowsPerPage","nextIconButtonProps","onPageChange","onRowsPerPageChange","page","rowsPerPage","rowsPerPageOptions","SelectProps","showFirstButton","showLastButton","other","MenuItemComponent","native","selectId","id","labelId","getLabelDisplayedRowsTo","Math","min","as","children","length","variant","value","onChange","icon","map","rowsPerPageOption","key","label","process","env","NODE_ENV","propTypes","elementType","object","string","number","isRequired","func","node","newLastPage","max","ceil","Error","arrayOf","oneOfType","shape","bool","sx"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _InputBase;\n\nconst _excluded = [\"ActionsComponent\", \"backIconButtonProps\", \"className\", \"colSpan\", \"component\", \"count\", \"getItemAriaLabel\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"onPageChange\", \"onRowsPerPageChange\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\", \"showFirstButton\", \"showLastButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, isHostComponent } from '@mui/core';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/useId';\nimport tablePaginationClasses, { getTablePaginationUtilityClass } from './tablePaginationClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TablePaginationRoot = styled(TableCell, {\n  name: 'MuiTablePagination',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  overflow: 'auto',\n  color: theme.palette.text.primary,\n  fontSize: theme.typography.pxToRem(14),\n  // Increase the specificity to override TableCell.\n  '&:last-child': {\n    padding: 0\n  }\n}));\nconst TablePaginationToolbar = styled(Toolbar, {\n  name: 'MuiTablePagination',\n  slot: 'Toolbar',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${tablePaginationClasses.actions}`]: styles.actions\n  }, styles.toolbar)\n})(({\n  theme\n}) => ({\n  minHeight: 52,\n  paddingRight: 2,\n  [`${theme.breakpoints.up('xs')} and (orientation: landscape)`]: {\n    minHeight: 52\n  },\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 52,\n    paddingRight: 2\n  },\n  [`& .${tablePaginationClasses.actions}`]: {\n    flexShrink: 0,\n    marginLeft: 20\n  }\n}));\nconst TablePaginationSpacer = styled('div', {\n  name: 'MuiTablePagination',\n  slot: 'Spacer',\n  overridesResolver: (props, styles) => styles.spacer\n})({\n  flex: '1 1 100%'\n});\nconst TablePaginationSelectLabel = styled('p', {\n  name: 'MuiTablePagination',\n  slot: 'SelectLabel',\n  overridesResolver: (props, styles) => styles.selectLabel\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  flexShrink: 0\n}));\nconst TablePaginationSelect = styled(Select, {\n  name: 'MuiTablePagination',\n  slot: 'Select',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${tablePaginationClasses.selectIcon}`]: styles.selectIcon,\n    [`& .${tablePaginationClasses.select}`]: styles.select\n  }, styles.input, styles.selectRoot)\n})({\n  color: 'inherit',\n  fontSize: 'inherit',\n  flexShrink: 0,\n  marginRight: 32,\n  marginLeft: 8,\n  [`& .${tablePaginationClasses.select}`]: {\n    paddingLeft: 8,\n    paddingRight: 24,\n    textAlign: 'right',\n    textAlignLast: 'right' // Align <select> on Chrome.\n\n  }\n});\nconst TablePaginationMenuItem = styled(MenuItem, {\n  name: 'MuiTablePagination',\n  slot: 'MenuItem',\n  overridesResolver: (props, styles) => styles.menuItem\n})({});\nconst TablePaginationDisplayedRows = styled('p', {\n  name: 'MuiTablePagination',\n  slot: 'DisplayedRows',\n  overridesResolver: (props, styles) => styles.displayedRows\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  flexShrink: 0\n}));\n\nfunction defaultLabelDisplayedRows({\n  from,\n  to,\n  count\n}) {\n  return `${from}-${to} of ${count !== -1 ? count : `more than ${to}`}`;\n}\n\nfunction defaultGetAriaLabel(type) {\n  return `Go to ${type} page`;\n}\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    toolbar: ['toolbar'],\n    spacer: ['spacer'],\n    selectLabel: ['selectLabel'],\n    select: ['select'],\n    input: ['input'],\n    selectIcon: ['selectIcon'],\n    menuItem: ['menuItem'],\n    displayedRows: ['displayedRows'],\n    actions: ['actions']\n  };\n  return composeClasses(slots, getTablePaginationUtilityClass, classes);\n};\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\n\nconst TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTablePagination'\n  });\n\n  const {\n    ActionsComponent = TablePaginationActions,\n    backIconButtonProps,\n    className,\n    colSpan: colSpanProp,\n    component = TableCell,\n    count,\n    getItemAriaLabel = defaultGetAriaLabel,\n    labelDisplayedRows = defaultLabelDisplayedRows,\n    labelRowsPerPage = 'Rows per page:',\n    nextIconButtonProps,\n    onPageChange,\n    onRowsPerPageChange,\n    page,\n    rowsPerPage,\n    rowsPerPageOptions = [10, 25, 50, 100],\n    SelectProps = {},\n    showFirstButton = false,\n    showLastButton = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const MenuItemComponent = SelectProps.native ? 'option' : TablePaginationMenuItem;\n  let colSpan;\n\n  if (component === TableCell || component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  const selectId = useId(SelectProps.id);\n  const labelId = useId(SelectProps.labelId);\n\n  const getLabelDisplayedRowsTo = () => {\n    if (count === -1) {\n      return (page + 1) * rowsPerPage;\n    }\n\n    return rowsPerPage === -1 ? count : Math.min(count, (page + 1) * rowsPerPage);\n  };\n\n  return /*#__PURE__*/_jsx(TablePaginationRoot, _extends({\n    colSpan: colSpan,\n    ref: ref,\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsxs(TablePaginationToolbar, {\n      className: classes.toolbar,\n      children: [/*#__PURE__*/_jsx(TablePaginationSpacer, {\n        className: classes.spacer\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(TablePaginationSelectLabel, {\n        className: classes.selectLabel,\n        id: labelId,\n        children: labelRowsPerPage\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(TablePaginationSelect, _extends({\n        variant: \"standard\",\n        input: _InputBase || (_InputBase = /*#__PURE__*/_jsx(InputBase, {})),\n        value: rowsPerPage,\n        onChange: onRowsPerPageChange,\n        id: selectId,\n        labelId: labelId\n      }, SelectProps, {\n        classes: _extends({}, SelectProps.classes, {\n          // TODO v5 remove `classes.input`\n          root: clsx(classes.input, classes.selectRoot, (SelectProps.classes || {}).root),\n          select: clsx(classes.select, (SelectProps.classes || {}).select),\n          // TODO v5 remove `selectIcon`\n          icon: clsx(classes.selectIcon, (SelectProps.classes || {}).icon)\n        }),\n        children: rowsPerPageOptions.map(rowsPerPageOption => /*#__PURE__*/_createElement(MenuItemComponent, _extends({}, !isHostComponent(MenuItemComponent) && {\n          ownerState\n        }, {\n          className: classes.menuItem,\n          key: rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption,\n          value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n        }), rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption))\n      })), /*#__PURE__*/_jsx(TablePaginationDisplayedRows, {\n        className: classes.displayedRows,\n        children: labelDisplayedRows({\n          from: count === 0 ? 0 : page * rowsPerPage + 1,\n          to: getLabelDisplayedRowsTo(),\n          count: count === -1 ? -1 : count,\n          page\n        })\n      }), /*#__PURE__*/_jsx(ActionsComponent, {\n        className: classes.actions,\n        backIconButtonProps: backIconButtonProps,\n        count: count,\n        nextIconButtonProps: nextIconButtonProps,\n        onPageChange: onPageChange,\n        page: page,\n        rowsPerPage: rowsPerPage,\n        showFirstButton: showFirstButton,\n        showLastButton: showLastButton,\n        getItemAriaLabel: getItemAriaLabel\n      })]\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   * @default TablePaginationActions\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: integerPropType.isRequired,\n\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   * This is important for screen reader users.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').\n   * @returns {string}\n   * @default function defaultGetAriaLabel(type) {\n   *   return `Go to ${type} page`;\n   * }\n   */\n  getItemAriaLabel: PropTypes.func,\n\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default function defaultLabelDisplayedRows({ from, to, count }) {\n   *   return `${from}-${to} of ${count !== -1 ? count : `more than ${to}`}`;\n   * }\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Rows per page:'\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.\n   */\n  onRowsPerPageChange: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(integerPropType.isRequired, props => {\n    const {\n      count,\n      page,\n      rowsPerPage\n    } = props;\n\n    if (count === -1) {\n      return null;\n    }\n\n    const newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('MUI: The page prop of a TablePagination is out of range ' + `(0 to ${newLastPage}, but page is ${page}).`);\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   *\n   * Set -1 to display all the rows.\n   */\n  rowsPerPage: integerPropType.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   * Use -1 for the value with a custom label to show all the rows.\n   * @default [10, 25, 50, 100]\n   */\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   * @default {}\n   */\n  SelectProps: PropTypes.object,\n\n  /**\n   * If `true`, show the first-page button.\n   * @default false\n   */\n  showFirstButton: PropTypes.bool,\n\n  /**\n   * If `true`, show the last-page button.\n   * @default false\n   */\n  showLastButton: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TablePagination;"]},"metadata":{},"sourceType":"module"}