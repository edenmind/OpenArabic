{"ast":null,"code":"import getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getLayoutRect from \"../dom-utils/getLayoutRect.js\";\nimport contains from \"../dom-utils/contains.js\";\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\nimport getMainAxisFromPlacement from \"../utils/getMainAxisFromPlacement.js\";\nimport within from \"../utils/within.js\";\nimport mergePaddingObject from \"../utils/mergePaddingObject.js\";\nimport expandToHashMap from \"../utils/expandToHashMap.js\";\nimport { left, right, basePlacements, top, bottom } from \"../enums.js\";\nimport { isHTMLElement } from \"../dom-utils/instanceOf.js\"; // eslint-disable-next-line import/no-unused-modules\n\nvar toPaddingObject = function toPaddingObject(padding, state) {\n  padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : padding;\n  return mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));\n};\n\nfunction arrow(_ref) {\n  var _state$modifiersData$;\n\n  var state = _ref.state,\n      name = _ref.name,\n      options = _ref.options;\n  var arrowElement = state.elements.arrow;\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var basePlacement = getBasePlacement(state.placement);\n  var axis = getMainAxisFromPlacement(basePlacement);\n  var isVertical = [left, right].indexOf(basePlacement) >= 0;\n  var len = isVertical ? 'height' : 'width';\n\n  if (!arrowElement || !popperOffsets) {\n    return;\n  }\n\n  var paddingObject = toPaddingObject(options.padding, state);\n  var arrowRect = getLayoutRect(arrowElement);\n  var minProp = axis === 'y' ? top : left;\n  var maxProp = axis === 'y' ? bottom : right;\n  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];\n  var startDiff = popperOffsets[axis] - state.rects.reference[axis];\n  var arrowOffsetParent = getOffsetParent(arrowElement);\n  var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is\n  // outside of the popper bounds\n\n  var min = paddingObject[minProp];\n  var max = clientSize - arrowRect[len] - paddingObject[maxProp];\n  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;\n  var offset = within(min, center, max); // Prevents breaking syntax highlighting...\n\n  var axisProp = axis;\n  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);\n}\n\nfunction effect(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options;\n  var _options$element = options.element,\n      arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;\n\n  if (arrowElement == null) {\n    return;\n  } // CSS selector\n\n\n  if (typeof arrowElement === 'string') {\n    arrowElement = state.elements.popper.querySelector(arrowElement);\n\n    if (!arrowElement) {\n      return;\n    }\n  }\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!isHTMLElement(arrowElement)) {\n      console.error(['Popper: \"arrow\" element must be an HTMLElement (not an SVGElement).', 'To use an SVG arrow, wrap it in an HTMLElement that will be used as', 'the arrow.'].join(' '));\n    }\n  }\n\n  if (!contains(state.elements.popper, arrowElement)) {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.error(['Popper: \"arrow\" modifier\\'s `element` must be a child of the popper', 'element.'].join(' '));\n    }\n\n    return;\n  }\n\n  state.elements.arrow = arrowElement;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'arrow',\n  enabled: true,\n  phase: 'main',\n  fn: arrow,\n  effect: effect,\n  requires: ['popperOffsets'],\n  requiresIfExists: ['preventOverflow']\n};","map":{"version":3,"sources":["/Users/jonas/Documents/GitHub/OpenArabic/frontend/node_modules/@popperjs/core/lib/modifiers/arrow.js"],"names":["getBasePlacement","getLayoutRect","contains","getOffsetParent","getMainAxisFromPlacement","within","mergePaddingObject","expandToHashMap","left","right","basePlacements","top","bottom","isHTMLElement","toPaddingObject","padding","state","Object","assign","rects","placement","arrow","_ref","_state$modifiersData$","name","options","arrowElement","elements","popperOffsets","modifiersData","basePlacement","axis","isVertical","indexOf","len","paddingObject","arrowRect","minProp","maxProp","endDiff","reference","popper","startDiff","arrowOffsetParent","clientSize","clientHeight","clientWidth","centerToReference","min","max","center","offset","axisProp","centerOffset","effect","_ref2","_options$element","element","querySelector","process","env","NODE_ENV","console","error","join","enabled","phase","fn","requires","requiresIfExists"],"mappings":"AAAA,OAAOA,gBAAP,MAA6B,8BAA7B;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,OAAOC,wBAAP,MAAqC,sCAArC;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,cAAtB,EAAsCC,GAAtC,EAA2CC,MAA3C,QAAyD,aAAzD;AACA,SAASC,aAAT,QAA8B,4BAA9B,C,CAA4D;;AAE5D,IAAIC,eAAe,GAAG,SAASA,eAAT,CAAyBC,OAAzB,EAAkCC,KAAlC,EAAyC;AAC7DD,EAAAA,OAAO,GAAG,OAAOA,OAAP,KAAmB,UAAnB,GAAgCA,OAAO,CAACE,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,KAAK,CAACG,KAAxB,EAA+B;AAC/EC,IAAAA,SAAS,EAAEJ,KAAK,CAACI;AAD8D,GAA/B,CAAD,CAAvC,GAEJL,OAFN;AAGA,SAAOT,kBAAkB,CAAC,OAAOS,OAAP,KAAmB,QAAnB,GAA8BA,OAA9B,GAAwCR,eAAe,CAACQ,OAAD,EAAUL,cAAV,CAAxD,CAAzB;AACD,CALD;;AAOA,SAASW,KAAT,CAAeC,IAAf,EAAqB;AACnB,MAAIC,qBAAJ;;AAEA,MAAIP,KAAK,GAAGM,IAAI,CAACN,KAAjB;AAAA,MACIQ,IAAI,GAAGF,IAAI,CAACE,IADhB;AAAA,MAEIC,OAAO,GAAGH,IAAI,CAACG,OAFnB;AAGA,MAAIC,YAAY,GAAGV,KAAK,CAACW,QAAN,CAAeN,KAAlC;AACA,MAAIO,aAAa,GAAGZ,KAAK,CAACa,aAAN,CAAoBD,aAAxC;AACA,MAAIE,aAAa,GAAG9B,gBAAgB,CAACgB,KAAK,CAACI,SAAP,CAApC;AACA,MAAIW,IAAI,GAAG3B,wBAAwB,CAAC0B,aAAD,CAAnC;AACA,MAAIE,UAAU,GAAG,CAACxB,IAAD,EAAOC,KAAP,EAAcwB,OAAd,CAAsBH,aAAtB,KAAwC,CAAzD;AACA,MAAII,GAAG,GAAGF,UAAU,GAAG,QAAH,GAAc,OAAlC;;AAEA,MAAI,CAACN,YAAD,IAAiB,CAACE,aAAtB,EAAqC;AACnC;AACD;;AAED,MAAIO,aAAa,GAAGrB,eAAe,CAACW,OAAO,CAACV,OAAT,EAAkBC,KAAlB,CAAnC;AACA,MAAIoB,SAAS,GAAGnC,aAAa,CAACyB,YAAD,CAA7B;AACA,MAAIW,OAAO,GAAGN,IAAI,KAAK,GAAT,GAAepB,GAAf,GAAqBH,IAAnC;AACA,MAAI8B,OAAO,GAAGP,IAAI,KAAK,GAAT,GAAenB,MAAf,GAAwBH,KAAtC;AACA,MAAI8B,OAAO,GAAGvB,KAAK,CAACG,KAAN,CAAYqB,SAAZ,CAAsBN,GAAtB,IAA6BlB,KAAK,CAACG,KAAN,CAAYqB,SAAZ,CAAsBT,IAAtB,CAA7B,GAA2DH,aAAa,CAACG,IAAD,CAAxE,GAAiFf,KAAK,CAACG,KAAN,CAAYsB,MAAZ,CAAmBP,GAAnB,CAA/F;AACA,MAAIQ,SAAS,GAAGd,aAAa,CAACG,IAAD,CAAb,GAAsBf,KAAK,CAACG,KAAN,CAAYqB,SAAZ,CAAsBT,IAAtB,CAAtC;AACA,MAAIY,iBAAiB,GAAGxC,eAAe,CAACuB,YAAD,CAAvC;AACA,MAAIkB,UAAU,GAAGD,iBAAiB,GAAGZ,IAAI,KAAK,GAAT,GAAeY,iBAAiB,CAACE,YAAlB,IAAkC,CAAjD,GAAqDF,iBAAiB,CAACG,WAAlB,IAAiC,CAAzF,GAA6F,CAA/H;AACA,MAAIC,iBAAiB,GAAGR,OAAO,GAAG,CAAV,GAAcG,SAAS,GAAG,CAAlD,CAzBmB,CAyBkC;AACrD;;AAEA,MAAIM,GAAG,GAAGb,aAAa,CAACE,OAAD,CAAvB;AACA,MAAIY,GAAG,GAAGL,UAAU,GAAGR,SAAS,CAACF,GAAD,CAAtB,GAA8BC,aAAa,CAACG,OAAD,CAArD;AACA,MAAIY,MAAM,GAAGN,UAAU,GAAG,CAAb,GAAiBR,SAAS,CAACF,GAAD,CAAT,GAAiB,CAAlC,GAAsCa,iBAAnD;AACA,MAAII,MAAM,GAAG9C,MAAM,CAAC2C,GAAD,EAAME,MAAN,EAAcD,GAAd,CAAnB,CA/BmB,CA+BoB;;AAEvC,MAAIG,QAAQ,GAAGrB,IAAf;AACAf,EAAAA,KAAK,CAACa,aAAN,CAAoBL,IAApB,KAA6BD,qBAAqB,GAAG,EAAxB,EAA4BA,qBAAqB,CAAC6B,QAAD,CAArB,GAAkCD,MAA9D,EAAsE5B,qBAAqB,CAAC8B,YAAtB,GAAqCF,MAAM,GAAGD,MAApH,EAA4H3B,qBAAzJ;AACD;;AAED,SAAS+B,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,MAAIvC,KAAK,GAAGuC,KAAK,CAACvC,KAAlB;AAAA,MACIS,OAAO,GAAG8B,KAAK,CAAC9B,OADpB;AAEA,MAAI+B,gBAAgB,GAAG/B,OAAO,CAACgC,OAA/B;AAAA,MACI/B,YAAY,GAAG8B,gBAAgB,KAAK,KAAK,CAA1B,GAA8B,qBAA9B,GAAsDA,gBADzE;;AAGA,MAAI9B,YAAY,IAAI,IAApB,EAA0B;AACxB;AACD,GARoB,CAQnB;;;AAGF,MAAI,OAAOA,YAAP,KAAwB,QAA5B,EAAsC;AACpCA,IAAAA,YAAY,GAAGV,KAAK,CAACW,QAAN,CAAec,MAAf,CAAsBiB,aAAtB,CAAoChC,YAApC,CAAf;;AAEA,QAAI,CAACA,YAAL,EAAmB;AACjB;AACD;AACF;;AAED,MAAIiC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,QAAI,CAAChD,aAAa,CAACa,YAAD,CAAlB,EAAkC;AAChCoC,MAAAA,OAAO,CAACC,KAAR,CAAc,CAAC,qEAAD,EAAwE,qEAAxE,EAA+I,YAA/I,EAA6JC,IAA7J,CAAkK,GAAlK,CAAd;AACD;AACF;;AAED,MAAI,CAAC9D,QAAQ,CAACc,KAAK,CAACW,QAAN,CAAec,MAAhB,EAAwBf,YAAxB,CAAb,EAAoD;AAClD,QAAIiC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCC,MAAAA,OAAO,CAACC,KAAR,CAAc,CAAC,qEAAD,EAAwE,UAAxE,EAAoFC,IAApF,CAAyF,GAAzF,CAAd;AACD;;AAED;AACD;;AAEDhD,EAAAA,KAAK,CAACW,QAAN,CAAeN,KAAf,GAAuBK,YAAvB;AACD,C,CAAC;;;AAGF,eAAe;AACbF,EAAAA,IAAI,EAAE,OADO;AAEbyC,EAAAA,OAAO,EAAE,IAFI;AAGbC,EAAAA,KAAK,EAAE,MAHM;AAIbC,EAAAA,EAAE,EAAE9C,KAJS;AAKbiC,EAAAA,MAAM,EAAEA,MALK;AAMbc,EAAAA,QAAQ,EAAE,CAAC,eAAD,CANG;AAObC,EAAAA,gBAAgB,EAAE,CAAC,iBAAD;AAPL,CAAf","sourcesContent":["import getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getLayoutRect from \"../dom-utils/getLayoutRect.js\";\nimport contains from \"../dom-utils/contains.js\";\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\nimport getMainAxisFromPlacement from \"../utils/getMainAxisFromPlacement.js\";\nimport within from \"../utils/within.js\";\nimport mergePaddingObject from \"../utils/mergePaddingObject.js\";\nimport expandToHashMap from \"../utils/expandToHashMap.js\";\nimport { left, right, basePlacements, top, bottom } from \"../enums.js\";\nimport { isHTMLElement } from \"../dom-utils/instanceOf.js\"; // eslint-disable-next-line import/no-unused-modules\n\nvar toPaddingObject = function toPaddingObject(padding, state) {\n  padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : padding;\n  return mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));\n};\n\nfunction arrow(_ref) {\n  var _state$modifiersData$;\n\n  var state = _ref.state,\n      name = _ref.name,\n      options = _ref.options;\n  var arrowElement = state.elements.arrow;\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var basePlacement = getBasePlacement(state.placement);\n  var axis = getMainAxisFromPlacement(basePlacement);\n  var isVertical = [left, right].indexOf(basePlacement) >= 0;\n  var len = isVertical ? 'height' : 'width';\n\n  if (!arrowElement || !popperOffsets) {\n    return;\n  }\n\n  var paddingObject = toPaddingObject(options.padding, state);\n  var arrowRect = getLayoutRect(arrowElement);\n  var minProp = axis === 'y' ? top : left;\n  var maxProp = axis === 'y' ? bottom : right;\n  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];\n  var startDiff = popperOffsets[axis] - state.rects.reference[axis];\n  var arrowOffsetParent = getOffsetParent(arrowElement);\n  var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is\n  // outside of the popper bounds\n\n  var min = paddingObject[minProp];\n  var max = clientSize - arrowRect[len] - paddingObject[maxProp];\n  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;\n  var offset = within(min, center, max); // Prevents breaking syntax highlighting...\n\n  var axisProp = axis;\n  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);\n}\n\nfunction effect(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options;\n  var _options$element = options.element,\n      arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;\n\n  if (arrowElement == null) {\n    return;\n  } // CSS selector\n\n\n  if (typeof arrowElement === 'string') {\n    arrowElement = state.elements.popper.querySelector(arrowElement);\n\n    if (!arrowElement) {\n      return;\n    }\n  }\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!isHTMLElement(arrowElement)) {\n      console.error(['Popper: \"arrow\" element must be an HTMLElement (not an SVGElement).', 'To use an SVG arrow, wrap it in an HTMLElement that will be used as', 'the arrow.'].join(' '));\n    }\n  }\n\n  if (!contains(state.elements.popper, arrowElement)) {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.error(['Popper: \"arrow\" modifier\\'s `element` must be a child of the popper', 'element.'].join(' '));\n    }\n\n    return;\n  }\n\n  state.elements.arrow = arrowElement;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'arrow',\n  enabled: true,\n  phase: 'main',\n  fn: arrow,\n  effect: effect,\n  requires: ['popperOffsets'],\n  requiresIfExists: ['preventOverflow']\n};"]},"metadata":{},"sourceType":"module"}