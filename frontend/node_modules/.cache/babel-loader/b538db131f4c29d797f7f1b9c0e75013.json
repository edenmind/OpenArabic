{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport sliderUnstyledClasses from './sliderUnstyledClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useValueLabelClasses = props => {\n  const {\n    open\n  } = props;\n  const utilityClasses = {\n    offset: clsx(open && sliderUnstyledClasses.valueLabelOpen),\n    circle: sliderUnstyledClasses.valueLabelCircle,\n    label: sliderUnstyledClasses.valueLabelLabel\n  };\n  return utilityClasses;\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction SliderValueLabelUnstyled(props) {\n  const {\n    children,\n    className,\n    value,\n    theme\n  } = props;\n  const classes = useValueLabelClasses(props);\n  return /*#__PURE__*/React.cloneElement(children, {\n    className: clsx(children.props.className)\n  }, /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [children.props.children, /*#__PURE__*/_jsx(\"span\", {\n      className: clsx(classes.offset, className),\n      theme: theme,\n      \"aria-hidden\": true,\n      children: /*#__PURE__*/_jsx(\"span\", {\n        className: classes.circle,\n        children: /*#__PURE__*/_jsx(\"span\", {\n          className: classes.label,\n          children: value\n        })\n      })\n    })]\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? SliderValueLabelUnstyled.propTypes = {\n  children: PropTypes.element.isRequired,\n  className: PropTypes.string,\n  theme: PropTypes.any,\n  value: PropTypes.node\n} : void 0;\nexport default SliderValueLabelUnstyled;","map":{"version":3,"sources":["/Users/jonas/Documents/GitHub/OpenArabic/frontend/node_modules/@mui/core/SliderUnstyled/SliderValueLabelUnstyled.js"],"names":["React","PropTypes","clsx","sliderUnstyledClasses","jsx","_jsx","jsxs","_jsxs","useValueLabelClasses","props","open","utilityClasses","offset","valueLabelOpen","circle","valueLabelCircle","label","valueLabelLabel","SliderValueLabelUnstyled","children","className","value","theme","classes","cloneElement","Fragment","process","env","NODE_ENV","propTypes","element","isRequired","string","any","node"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,SAASC,IAAI,IAAIC,KAAjB,QAA8B,mBAA9B;;AAEA,MAAMC,oBAAoB,GAAGC,KAAK,IAAI;AACpC,QAAM;AACJC,IAAAA;AADI,MAEFD,KAFJ;AAGA,QAAME,cAAc,GAAG;AACrBC,IAAAA,MAAM,EAAEV,IAAI,CAACQ,IAAI,IAAIP,qBAAqB,CAACU,cAA/B,CADS;AAErBC,IAAAA,MAAM,EAAEX,qBAAqB,CAACY,gBAFT;AAGrBC,IAAAA,KAAK,EAAEb,qBAAqB,CAACc;AAHR,GAAvB;AAKA,SAAON,cAAP;AACD,CAVD;AAWA;AACA;AACA;;;AAGA,SAASO,wBAAT,CAAkCT,KAAlC,EAAyC;AACvC,QAAM;AACJU,IAAAA,QADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA;AAJI,MAKFb,KALJ;AAMA,QAAMc,OAAO,GAAGf,oBAAoB,CAACC,KAAD,CAApC;AACA,SAAO,aAAaT,KAAK,CAACwB,YAAN,CAAmBL,QAAnB,EAA6B;AAC/CC,IAAAA,SAAS,EAAElB,IAAI,CAACiB,QAAQ,CAACV,KAAT,CAAeW,SAAhB;AADgC,GAA7B,EAEjB,aAAab,KAAK,CAACP,KAAK,CAACyB,QAAP,EAAiB;AACpCN,IAAAA,QAAQ,EAAE,CAACA,QAAQ,CAACV,KAAT,CAAeU,QAAhB,EAA0B,aAAad,IAAI,CAAC,MAAD,EAAS;AAC5De,MAAAA,SAAS,EAAElB,IAAI,CAACqB,OAAO,CAACX,MAAT,EAAiBQ,SAAjB,CAD6C;AAE5DE,MAAAA,KAAK,EAAEA,KAFqD;AAG5D,qBAAe,IAH6C;AAI5DH,MAAAA,QAAQ,EAAE,aAAad,IAAI,CAAC,MAAD,EAAS;AAClCe,QAAAA,SAAS,EAAEG,OAAO,CAACT,MADe;AAElCK,QAAAA,QAAQ,EAAE,aAAad,IAAI,CAAC,MAAD,EAAS;AAClCe,UAAAA,SAAS,EAAEG,OAAO,CAACP,KADe;AAElCG,UAAAA,QAAQ,EAAEE;AAFwB,SAAT;AAFO,OAAT;AAJiC,KAAT,CAA3C;AAD0B,GAAjB,CAFD,CAApB;AAgBD;;AAEDK,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCV,wBAAwB,CAACW,SAAzB,GAAqC;AAC3EV,EAAAA,QAAQ,EAAElB,SAAS,CAAC6B,OAAV,CAAkBC,UAD+C;AAE3EX,EAAAA,SAAS,EAAEnB,SAAS,CAAC+B,MAFsD;AAG3EV,EAAAA,KAAK,EAAErB,SAAS,CAACgC,GAH0D;AAI3EZ,EAAAA,KAAK,EAAEpB,SAAS,CAACiC;AAJ0D,CAA7E,GAKI,KAAK,CALT;AAMA,eAAehB,wBAAf","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport sliderUnstyledClasses from './sliderUnstyledClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useValueLabelClasses = props => {\n  const {\n    open\n  } = props;\n  const utilityClasses = {\n    offset: clsx(open && sliderUnstyledClasses.valueLabelOpen),\n    circle: sliderUnstyledClasses.valueLabelCircle,\n    label: sliderUnstyledClasses.valueLabelLabel\n  };\n  return utilityClasses;\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction SliderValueLabelUnstyled(props) {\n  const {\n    children,\n    className,\n    value,\n    theme\n  } = props;\n  const classes = useValueLabelClasses(props);\n  return /*#__PURE__*/React.cloneElement(children, {\n    className: clsx(children.props.className)\n  }, /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [children.props.children, /*#__PURE__*/_jsx(\"span\", {\n      className: clsx(classes.offset, className),\n      theme: theme,\n      \"aria-hidden\": true,\n      children: /*#__PURE__*/_jsx(\"span\", {\n        className: classes.circle,\n        children: /*#__PURE__*/_jsx(\"span\", {\n          className: classes.label,\n          children: value\n        })\n      })\n    })]\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? SliderValueLabelUnstyled.propTypes = {\n  children: PropTypes.element.isRequired,\n  className: PropTypes.string,\n  theme: PropTypes.any,\n  value: PropTypes.node\n} : void 0;\nexport default SliderValueLabelUnstyled;"]},"metadata":{},"sourceType":"module"}