{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"center\", \"classes\", \"className\"];\n\nlet _ = t => t,\n    _t,\n    _t2,\n    _t3,\n    _t4;\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup } from 'react-transition-group';\nimport clsx from 'clsx';\nimport { keyframes } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Ripple from './Ripple';\nimport touchRippleClasses from './touchRippleClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DURATION = 550;\nexport const DELAY_RIPPLE = 80;\nconst enterKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: scale(0);\n    opacity: 0.1;\n  }\n\n  100% {\n    transform: scale(1);\n    opacity: 0.3;\n  }\n`));\nconst exitKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    opacity: 1;\n  }\n\n  100% {\n    opacity: 0;\n  }\n`));\nconst pulsateKeyframe = keyframes(_t3 || (_t3 = _`\n  0% {\n    transform: scale(1);\n  }\n\n  50% {\n    transform: scale(0.92);\n  }\n\n  100% {\n    transform: scale(1);\n  }\n`));\nexport const TouchRippleRoot = styled('span', {\n  name: 'MuiTouchRipple',\n  slot: 'Root',\n  skipSx: true\n})({\n  overflow: 'hidden',\n  pointerEvents: 'none',\n  position: 'absolute',\n  zIndex: 0,\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  borderRadius: 'inherit'\n}); // This `styled()` function invokes keyframes. `styled-components` only supports keyframes\n// in string templates. Do not convert these styles in JS object as it will break.\n\nexport const TouchRippleRipple = styled(Ripple, {\n  name: 'MuiTouchRipple',\n  slot: 'Ripple'\n})(_t4 || (_t4 = _`\n  opacity: 0;\n  position: absolute;\n\n  &.${0} {\n    opacity: 0.3;\n    transform: scale(1);\n    animation-name: ${0};\n    animation-duration: ${0}ms;\n    animation-timing-function: ${0};\n  }\n\n  &.${0} {\n    animation-duration: ${0}ms;\n  }\n\n  & .${0} {\n    opacity: 1;\n    display: block;\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    background-color: currentColor;\n  }\n\n  & .${0} {\n    opacity: 0;\n    animation-name: ${0};\n    animation-duration: ${0}ms;\n    animation-timing-function: ${0};\n  }\n\n  & .${0} {\n    position: absolute;\n    /* @noflip */\n    left: 0px;\n    top: 0;\n    animation-name: ${0};\n    animation-duration: 2500ms;\n    animation-timing-function: ${0};\n    animation-iteration-count: infinite;\n    animation-delay: 200ms;\n  }\n`), touchRippleClasses.rippleVisible, enterKeyframe, DURATION, _ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.transitions.easing.easeInOut;\n}, touchRippleClasses.ripplePulsate, _ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.transitions.duration.shorter;\n}, touchRippleClasses.child, touchRippleClasses.childLeaving, exitKeyframe, DURATION, _ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return theme.transitions.easing.easeInOut;\n}, touchRippleClasses.childPulsate, pulsateKeyframe, _ref4 => {\n  let {\n    theme\n  } = _ref4;\n  return theme.transitions.easing.easeInOut;\n});\n/**\n * @ignore - internal component.\n *\n * TODO v5: Make private\n */\n\nconst TouchRipple = /*#__PURE__*/React.forwardRef(function TouchRipple(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTouchRipple'\n  });\n\n  const {\n    center: centerProp = false,\n    classes = {},\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [ripples, setRipples] = React.useState([]);\n  const nextKey = React.useRef(0);\n  const rippleCallback = React.useRef(null);\n  React.useEffect(() => {\n    if (rippleCallback.current) {\n      rippleCallback.current();\n      rippleCallback.current = null;\n    }\n  }, [ripples]); // Used to filter out mouse emulated events on mobile.\n\n  const ignoringMouseDown = React.useRef(false); // We use a timer in order to only show the ripples for touch \"click\" like events.\n  // We don't want to display the ripple for touch scroll events.\n\n  const startTimer = React.useRef(null); // This is the hook called once the previous timeout is ready.\n\n  const startTimerCommit = React.useRef(null);\n  const container = React.useRef(null);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(startTimer.current);\n    };\n  }, []);\n  const startCommit = React.useCallback(params => {\n    const {\n      pulsate,\n      rippleX,\n      rippleY,\n      rippleSize,\n      cb\n    } = params;\n    setRipples(oldRipples => [...oldRipples, /*#__PURE__*/_jsx(TouchRippleRipple, {\n      classes: {\n        ripple: clsx(classes.ripple, touchRippleClasses.ripple),\n        rippleVisible: clsx(classes.rippleVisible, touchRippleClasses.rippleVisible),\n        ripplePulsate: clsx(classes.ripplePulsate, touchRippleClasses.ripplePulsate),\n        child: clsx(classes.child, touchRippleClasses.child),\n        childLeaving: clsx(classes.childLeaving, touchRippleClasses.childLeaving),\n        childPulsate: clsx(classes.childPulsate, touchRippleClasses.childPulsate)\n      },\n      timeout: DURATION,\n      pulsate: pulsate,\n      rippleX: rippleX,\n      rippleY: rippleY,\n      rippleSize: rippleSize\n    }, nextKey.current)]);\n    nextKey.current += 1;\n    rippleCallback.current = cb;\n  }, [classes]);\n  const start = React.useCallback(function () {\n    let event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let cb = arguments.length > 2 ? arguments[2] : undefined;\n    const {\n      pulsate = false,\n      center = centerProp || options.pulsate,\n      fakeElement = false // For test purposes\n\n    } = options;\n\n    if (event.type === 'mousedown' && ignoringMouseDown.current) {\n      ignoringMouseDown.current = false;\n      return;\n    }\n\n    if (event.type === 'touchstart') {\n      ignoringMouseDown.current = true;\n    }\n\n    const element = fakeElement ? null : container.current;\n    const rect = element ? element.getBoundingClientRect() : {\n      width: 0,\n      height: 0,\n      left: 0,\n      top: 0\n    }; // Get the size of the ripple\n\n    let rippleX;\n    let rippleY;\n    let rippleSize;\n\n    if (center || event.clientX === 0 && event.clientY === 0 || !event.clientX && !event.touches) {\n      rippleX = Math.round(rect.width / 2);\n      rippleY = Math.round(rect.height / 2);\n    } else {\n      const {\n        clientX,\n        clientY\n      } = event.touches ? event.touches[0] : event;\n      rippleX = Math.round(clientX - rect.left);\n      rippleY = Math.round(clientY - rect.top);\n    }\n\n    if (center) {\n      rippleSize = Math.sqrt((2 * rect.width ** 2 + rect.height ** 2) / 3); // For some reason the animation is broken on Mobile Chrome if the size is even.\n\n      if (rippleSize % 2 === 0) {\n        rippleSize += 1;\n      }\n    } else {\n      const sizeX = Math.max(Math.abs((element ? element.clientWidth : 0) - rippleX), rippleX) * 2 + 2;\n      const sizeY = Math.max(Math.abs((element ? element.clientHeight : 0) - rippleY), rippleY) * 2 + 2;\n      rippleSize = Math.sqrt(sizeX ** 2 + sizeY ** 2);\n    } // Touche devices\n\n\n    if (event.touches) {\n      // check that this isn't another touchstart due to multitouch\n      // otherwise we will only clear a single timer when unmounting while two\n      // are running\n      if (startTimerCommit.current === null) {\n        // Prepare the ripple effect.\n        startTimerCommit.current = () => {\n          startCommit({\n            pulsate,\n            rippleX,\n            rippleY,\n            rippleSize,\n            cb\n          });\n        }; // Delay the execution of the ripple effect.\n\n\n        startTimer.current = setTimeout(() => {\n          if (startTimerCommit.current) {\n            startTimerCommit.current();\n            startTimerCommit.current = null;\n          }\n        }, DELAY_RIPPLE); // We have to make a tradeoff with this value.\n      }\n    } else {\n      startCommit({\n        pulsate,\n        rippleX,\n        rippleY,\n        rippleSize,\n        cb\n      });\n    }\n  }, [centerProp, startCommit]);\n  const pulsate = React.useCallback(() => {\n    start({}, {\n      pulsate: true\n    });\n  }, [start]);\n  const stop = React.useCallback((event, cb) => {\n    clearTimeout(startTimer.current); // The touch interaction occurs too quickly.\n    // We still want to show ripple effect.\n\n    if (event.type === 'touchend' && startTimerCommit.current) {\n      startTimerCommit.current();\n      startTimerCommit.current = null;\n      startTimer.current = setTimeout(() => {\n        stop(event, cb);\n      });\n      return;\n    }\n\n    startTimerCommit.current = null;\n    setRipples(oldRipples => {\n      if (oldRipples.length > 0) {\n        return oldRipples.slice(1);\n      }\n\n      return oldRipples;\n    });\n    rippleCallback.current = cb;\n  }, []);\n  React.useImperativeHandle(ref, () => ({\n    pulsate,\n    start,\n    stop\n  }), [pulsate, start, stop]);\n  return /*#__PURE__*/_jsx(TouchRippleRoot, _extends({\n    className: clsx(classes.root, touchRippleClasses.root, className),\n    ref: container\n  }, other, {\n    children: /*#__PURE__*/_jsx(TransitionGroup, {\n      component: null,\n      exit: true,\n      children: ripples\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TouchRipple.propTypes = {\n  /**\n   * If `true`, the ripple starts at the center of the component\n   * rather than at the point of interaction.\n   */\n  center: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default TouchRipple;","map":{"version":3,"sources":["/Users/jonas/Documents/GitHub/OpenArabic/frontend/node_modules/@mui/material/ButtonBase/TouchRipple.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","_","t","_t","_t2","_t3","_t4","React","PropTypes","TransitionGroup","clsx","keyframes","styled","useThemeProps","Ripple","touchRippleClasses","jsx","_jsx","DURATION","DELAY_RIPPLE","enterKeyframe","exitKeyframe","pulsateKeyframe","TouchRippleRoot","name","slot","skipSx","overflow","pointerEvents","position","zIndex","top","right","bottom","left","borderRadius","TouchRippleRipple","rippleVisible","theme","transitions","easing","easeInOut","ripplePulsate","duration","shorter","child","childLeaving","childPulsate","TouchRipple","forwardRef","inProps","ref","props","center","centerProp","classes","className","other","ripples","setRipples","useState","nextKey","useRef","rippleCallback","useEffect","current","ignoringMouseDown","startTimer","startTimerCommit","container","clearTimeout","startCommit","useCallback","params","pulsate","rippleX","rippleY","rippleSize","cb","oldRipples","ripple","timeout","start","event","options","fakeElement","type","element","rect","getBoundingClientRect","width","height","clientX","clientY","touches","Math","round","sqrt","sizeX","max","abs","clientWidth","sizeY","clientHeight","setTimeout","stop","length","slice","useImperativeHandle","root","children","component","exit","process","env","NODE_ENV","propTypes","bool","object","string"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"center\", \"classes\", \"className\"];\n\nlet _ = t => t,\n    _t,\n    _t2,\n    _t3,\n    _t4;\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup } from 'react-transition-group';\nimport clsx from 'clsx';\nimport { keyframes } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Ripple from './Ripple';\nimport touchRippleClasses from './touchRippleClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DURATION = 550;\nexport const DELAY_RIPPLE = 80;\nconst enterKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: scale(0);\n    opacity: 0.1;\n  }\n\n  100% {\n    transform: scale(1);\n    opacity: 0.3;\n  }\n`));\nconst exitKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    opacity: 1;\n  }\n\n  100% {\n    opacity: 0;\n  }\n`));\nconst pulsateKeyframe = keyframes(_t3 || (_t3 = _`\n  0% {\n    transform: scale(1);\n  }\n\n  50% {\n    transform: scale(0.92);\n  }\n\n  100% {\n    transform: scale(1);\n  }\n`));\nexport const TouchRippleRoot = styled('span', {\n  name: 'MuiTouchRipple',\n  slot: 'Root',\n  skipSx: true\n})({\n  overflow: 'hidden',\n  pointerEvents: 'none',\n  position: 'absolute',\n  zIndex: 0,\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  borderRadius: 'inherit'\n}); // This `styled()` function invokes keyframes. `styled-components` only supports keyframes\n// in string templates. Do not convert these styles in JS object as it will break.\n\nexport const TouchRippleRipple = styled(Ripple, {\n  name: 'MuiTouchRipple',\n  slot: 'Ripple'\n})(_t4 || (_t4 = _`\n  opacity: 0;\n  position: absolute;\n\n  &.${0} {\n    opacity: 0.3;\n    transform: scale(1);\n    animation-name: ${0};\n    animation-duration: ${0}ms;\n    animation-timing-function: ${0};\n  }\n\n  &.${0} {\n    animation-duration: ${0}ms;\n  }\n\n  & .${0} {\n    opacity: 1;\n    display: block;\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    background-color: currentColor;\n  }\n\n  & .${0} {\n    opacity: 0;\n    animation-name: ${0};\n    animation-duration: ${0}ms;\n    animation-timing-function: ${0};\n  }\n\n  & .${0} {\n    position: absolute;\n    /* @noflip */\n    left: 0px;\n    top: 0;\n    animation-name: ${0};\n    animation-duration: 2500ms;\n    animation-timing-function: ${0};\n    animation-iteration-count: infinite;\n    animation-delay: 200ms;\n  }\n`), touchRippleClasses.rippleVisible, enterKeyframe, DURATION, ({\n  theme\n}) => theme.transitions.easing.easeInOut, touchRippleClasses.ripplePulsate, ({\n  theme\n}) => theme.transitions.duration.shorter, touchRippleClasses.child, touchRippleClasses.childLeaving, exitKeyframe, DURATION, ({\n  theme\n}) => theme.transitions.easing.easeInOut, touchRippleClasses.childPulsate, pulsateKeyframe, ({\n  theme\n}) => theme.transitions.easing.easeInOut);\n/**\n * @ignore - internal component.\n *\n * TODO v5: Make private\n */\n\nconst TouchRipple = /*#__PURE__*/React.forwardRef(function TouchRipple(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTouchRipple'\n  });\n\n  const {\n    center: centerProp = false,\n    classes = {},\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [ripples, setRipples] = React.useState([]);\n  const nextKey = React.useRef(0);\n  const rippleCallback = React.useRef(null);\n  React.useEffect(() => {\n    if (rippleCallback.current) {\n      rippleCallback.current();\n      rippleCallback.current = null;\n    }\n  }, [ripples]); // Used to filter out mouse emulated events on mobile.\n\n  const ignoringMouseDown = React.useRef(false); // We use a timer in order to only show the ripples for touch \"click\" like events.\n  // We don't want to display the ripple for touch scroll events.\n\n  const startTimer = React.useRef(null); // This is the hook called once the previous timeout is ready.\n\n  const startTimerCommit = React.useRef(null);\n  const container = React.useRef(null);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(startTimer.current);\n    };\n  }, []);\n  const startCommit = React.useCallback(params => {\n    const {\n      pulsate,\n      rippleX,\n      rippleY,\n      rippleSize,\n      cb\n    } = params;\n    setRipples(oldRipples => [...oldRipples, /*#__PURE__*/_jsx(TouchRippleRipple, {\n      classes: {\n        ripple: clsx(classes.ripple, touchRippleClasses.ripple),\n        rippleVisible: clsx(classes.rippleVisible, touchRippleClasses.rippleVisible),\n        ripplePulsate: clsx(classes.ripplePulsate, touchRippleClasses.ripplePulsate),\n        child: clsx(classes.child, touchRippleClasses.child),\n        childLeaving: clsx(classes.childLeaving, touchRippleClasses.childLeaving),\n        childPulsate: clsx(classes.childPulsate, touchRippleClasses.childPulsate)\n      },\n      timeout: DURATION,\n      pulsate: pulsate,\n      rippleX: rippleX,\n      rippleY: rippleY,\n      rippleSize: rippleSize\n    }, nextKey.current)]);\n    nextKey.current += 1;\n    rippleCallback.current = cb;\n  }, [classes]);\n  const start = React.useCallback((event = {}, options = {}, cb) => {\n    const {\n      pulsate = false,\n      center = centerProp || options.pulsate,\n      fakeElement = false // For test purposes\n\n    } = options;\n\n    if (event.type === 'mousedown' && ignoringMouseDown.current) {\n      ignoringMouseDown.current = false;\n      return;\n    }\n\n    if (event.type === 'touchstart') {\n      ignoringMouseDown.current = true;\n    }\n\n    const element = fakeElement ? null : container.current;\n    const rect = element ? element.getBoundingClientRect() : {\n      width: 0,\n      height: 0,\n      left: 0,\n      top: 0\n    }; // Get the size of the ripple\n\n    let rippleX;\n    let rippleY;\n    let rippleSize;\n\n    if (center || event.clientX === 0 && event.clientY === 0 || !event.clientX && !event.touches) {\n      rippleX = Math.round(rect.width / 2);\n      rippleY = Math.round(rect.height / 2);\n    } else {\n      const {\n        clientX,\n        clientY\n      } = event.touches ? event.touches[0] : event;\n      rippleX = Math.round(clientX - rect.left);\n      rippleY = Math.round(clientY - rect.top);\n    }\n\n    if (center) {\n      rippleSize = Math.sqrt((2 * rect.width ** 2 + rect.height ** 2) / 3); // For some reason the animation is broken on Mobile Chrome if the size is even.\n\n      if (rippleSize % 2 === 0) {\n        rippleSize += 1;\n      }\n    } else {\n      const sizeX = Math.max(Math.abs((element ? element.clientWidth : 0) - rippleX), rippleX) * 2 + 2;\n      const sizeY = Math.max(Math.abs((element ? element.clientHeight : 0) - rippleY), rippleY) * 2 + 2;\n      rippleSize = Math.sqrt(sizeX ** 2 + sizeY ** 2);\n    } // Touche devices\n\n\n    if (event.touches) {\n      // check that this isn't another touchstart due to multitouch\n      // otherwise we will only clear a single timer when unmounting while two\n      // are running\n      if (startTimerCommit.current === null) {\n        // Prepare the ripple effect.\n        startTimerCommit.current = () => {\n          startCommit({\n            pulsate,\n            rippleX,\n            rippleY,\n            rippleSize,\n            cb\n          });\n        }; // Delay the execution of the ripple effect.\n\n\n        startTimer.current = setTimeout(() => {\n          if (startTimerCommit.current) {\n            startTimerCommit.current();\n            startTimerCommit.current = null;\n          }\n        }, DELAY_RIPPLE); // We have to make a tradeoff with this value.\n      }\n    } else {\n      startCommit({\n        pulsate,\n        rippleX,\n        rippleY,\n        rippleSize,\n        cb\n      });\n    }\n  }, [centerProp, startCommit]);\n  const pulsate = React.useCallback(() => {\n    start({}, {\n      pulsate: true\n    });\n  }, [start]);\n  const stop = React.useCallback((event, cb) => {\n    clearTimeout(startTimer.current); // The touch interaction occurs too quickly.\n    // We still want to show ripple effect.\n\n    if (event.type === 'touchend' && startTimerCommit.current) {\n      startTimerCommit.current();\n      startTimerCommit.current = null;\n      startTimer.current = setTimeout(() => {\n        stop(event, cb);\n      });\n      return;\n    }\n\n    startTimerCommit.current = null;\n    setRipples(oldRipples => {\n      if (oldRipples.length > 0) {\n        return oldRipples.slice(1);\n      }\n\n      return oldRipples;\n    });\n    rippleCallback.current = cb;\n  }, []);\n  React.useImperativeHandle(ref, () => ({\n    pulsate,\n    start,\n    stop\n  }), [pulsate, start, stop]);\n  return /*#__PURE__*/_jsx(TouchRippleRoot, _extends({\n    className: clsx(classes.root, touchRippleClasses.root, className),\n    ref: container\n  }, other, {\n    children: /*#__PURE__*/_jsx(TransitionGroup, {\n      component: null,\n      exit: true,\n      children: ripples\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TouchRipple.propTypes = {\n  /**\n   * If `true`, the ripple starts at the center of the component\n   * rather than at the point of interaction.\n   */\n  center: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default TouchRipple;"]},"metadata":{},"sourceType":"module"}