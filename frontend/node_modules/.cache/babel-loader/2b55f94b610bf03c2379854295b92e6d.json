{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nvar _LastPageIcon, _FirstPageIcon, _KeyboardArrowRight, _KeyboardArrowLeft, _KeyboardArrowLeft2, _KeyboardArrowRight2, _FirstPageIcon2, _LastPageIcon2;\n\nconst _excluded = [\"backIconButtonProps\", \"count\", \"getItemAriaLabel\", \"nextIconButtonProps\", \"onPageChange\", \"page\", \"rowsPerPage\", \"showFirstButton\", \"showLastButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\nimport LastPageIcon from '../internal/svg-icons/LastPage';\nimport FirstPageIcon from '../internal/svg-icons/FirstPage';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  const {\n    backIconButtonProps,\n    count,\n    getItemAriaLabel,\n    nextIconButtonProps,\n    onPageChange,\n    page,\n    rowsPerPage,\n    showFirstButton,\n    showLastButton\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const theme = useTheme();\n\n  const handleFirstPageButtonClick = event => {\n    onPageChange(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onPageChange(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: ref\n  }, other, {\n    children: [showFirstButton && /*#__PURE__*/_jsx(IconButton, {\n      onClick: handleFirstPageButtonClick,\n      disabled: page === 0,\n      \"aria-label\": getItemAriaLabel('first', page),\n      title: getItemAriaLabel('first', page),\n      children: theme.direction === 'rtl' ? _LastPageIcon || (_LastPageIcon = /*#__PURE__*/_jsx(LastPageIcon, {})) : _FirstPageIcon || (_FirstPageIcon = /*#__PURE__*/_jsx(FirstPageIcon, {}))\n    }), /*#__PURE__*/_jsx(IconButton, _extends({\n      onClick: handleBackButtonClick,\n      disabled: page === 0,\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('previous', page),\n      title: getItemAriaLabel('previous', page)\n    }, backIconButtonProps, {\n      children: theme.direction === 'rtl' ? _KeyboardArrowRight || (_KeyboardArrowRight = /*#__PURE__*/_jsx(KeyboardArrowRight, {})) : _KeyboardArrowLeft || (_KeyboardArrowLeft = /*#__PURE__*/_jsx(KeyboardArrowLeft, {}))\n    })), /*#__PURE__*/_jsx(IconButton, _extends({\n      onClick: handleNextButtonClick,\n      disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('next', page),\n      title: getItemAriaLabel('next', page)\n    }, nextIconButtonProps, {\n      children: theme.direction === 'rtl' ? _KeyboardArrowLeft2 || (_KeyboardArrowLeft2 = /*#__PURE__*/_jsx(KeyboardArrowLeft, {})) : _KeyboardArrowRight2 || (_KeyboardArrowRight2 = /*#__PURE__*/_jsx(KeyboardArrowRight, {}))\n    })), showLastButton && /*#__PURE__*/_jsx(IconButton, {\n      onClick: handleLastPageButtonClick,\n      disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": getItemAriaLabel('last', page),\n      title: getItemAriaLabel('last', page),\n      children: theme.direction === 'rtl' ? _FirstPageIcon2 || (_FirstPageIcon2 = /*#__PURE__*/_jsx(FirstPageIcon, {})) : _LastPageIcon2 || (_LastPageIcon2 = /*#__PURE__*/_jsx(LastPageIcon, {}))\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   *\n   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.\n   * @param {number} page The page number to format.\n   * @returns {string}\n   */\n  getItemAriaLabel: PropTypes.func.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * If `true`, show the first-page button.\n   */\n  showFirstButton: PropTypes.bool.isRequired,\n\n  /**\n   * If `true`, show the last-page button.\n   */\n  showLastButton: PropTypes.bool.isRequired\n} : void 0;\nexport default TablePaginationActions;","map":{"version":3,"sources":["/Users/jonas/Documents/GitHub/OpenArabic/frontend/node_modules/@mui/material/TablePagination/TablePaginationActions.js"],"names":["_extends","_objectWithoutPropertiesLoose","_LastPageIcon","_FirstPageIcon","_KeyboardArrowRight","_KeyboardArrowLeft","_KeyboardArrowLeft2","_KeyboardArrowRight2","_FirstPageIcon2","_LastPageIcon2","_excluded","React","PropTypes","KeyboardArrowLeft","KeyboardArrowRight","useTheme","IconButton","LastPageIcon","FirstPageIcon","jsx","_jsx","jsxs","_jsxs","TablePaginationActions","forwardRef","props","ref","backIconButtonProps","count","getItemAriaLabel","nextIconButtonProps","onPageChange","page","rowsPerPage","showFirstButton","showLastButton","other","theme","handleFirstPageButtonClick","event","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","children","onClick","disabled","title","direction","color","process","env","NODE_ENV","propTypes","object","number","isRequired","func","bool"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nvar _LastPageIcon, _FirstPageIcon, _KeyboardArrowRight, _KeyboardArrowLeft, _KeyboardArrowLeft2, _KeyboardArrowRight2, _FirstPageIcon2, _LastPageIcon2;\n\nconst _excluded = [\"backIconButtonProps\", \"count\", \"getItemAriaLabel\", \"nextIconButtonProps\", \"onPageChange\", \"page\", \"rowsPerPage\", \"showFirstButton\", \"showLastButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\nimport LastPageIcon from '../internal/svg-icons/LastPage';\nimport FirstPageIcon from '../internal/svg-icons/FirstPage';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  const {\n    backIconButtonProps,\n    count,\n    getItemAriaLabel,\n    nextIconButtonProps,\n    onPageChange,\n    page,\n    rowsPerPage,\n    showFirstButton,\n    showLastButton\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const theme = useTheme();\n\n  const handleFirstPageButtonClick = event => {\n    onPageChange(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onPageChange(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: ref\n  }, other, {\n    children: [showFirstButton && /*#__PURE__*/_jsx(IconButton, {\n      onClick: handleFirstPageButtonClick,\n      disabled: page === 0,\n      \"aria-label\": getItemAriaLabel('first', page),\n      title: getItemAriaLabel('first', page),\n      children: theme.direction === 'rtl' ? _LastPageIcon || (_LastPageIcon = /*#__PURE__*/_jsx(LastPageIcon, {})) : _FirstPageIcon || (_FirstPageIcon = /*#__PURE__*/_jsx(FirstPageIcon, {}))\n    }), /*#__PURE__*/_jsx(IconButton, _extends({\n      onClick: handleBackButtonClick,\n      disabled: page === 0,\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('previous', page),\n      title: getItemAriaLabel('previous', page)\n    }, backIconButtonProps, {\n      children: theme.direction === 'rtl' ? _KeyboardArrowRight || (_KeyboardArrowRight = /*#__PURE__*/_jsx(KeyboardArrowRight, {})) : _KeyboardArrowLeft || (_KeyboardArrowLeft = /*#__PURE__*/_jsx(KeyboardArrowLeft, {}))\n    })), /*#__PURE__*/_jsx(IconButton, _extends({\n      onClick: handleNextButtonClick,\n      disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('next', page),\n      title: getItemAriaLabel('next', page)\n    }, nextIconButtonProps, {\n      children: theme.direction === 'rtl' ? _KeyboardArrowLeft2 || (_KeyboardArrowLeft2 = /*#__PURE__*/_jsx(KeyboardArrowLeft, {})) : _KeyboardArrowRight2 || (_KeyboardArrowRight2 = /*#__PURE__*/_jsx(KeyboardArrowRight, {}))\n    })), showLastButton && /*#__PURE__*/_jsx(IconButton, {\n      onClick: handleLastPageButtonClick,\n      disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": getItemAriaLabel('last', page),\n      title: getItemAriaLabel('last', page),\n      children: theme.direction === 'rtl' ? _FirstPageIcon2 || (_FirstPageIcon2 = /*#__PURE__*/_jsx(FirstPageIcon, {})) : _LastPageIcon2 || (_LastPageIcon2 = /*#__PURE__*/_jsx(LastPageIcon, {}))\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   *\n   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.\n   * @param {number} page The page number to format.\n   * @returns {string}\n   */\n  getItemAriaLabel: PropTypes.func.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * If `true`, show the first-page button.\n   */\n  showFirstButton: PropTypes.bool.isRequired,\n\n  /**\n   * If `true`, show the last-page button.\n   */\n  showLastButton: PropTypes.bool.isRequired\n} : void 0;\nexport default TablePaginationActions;"]},"metadata":{},"sourceType":"module"}