{"ast":null,"code":"import getBasePlacement from \"../utils/getBasePlacement.js\";\nimport { top, left, right, placements } from \"../enums.js\";\nexport function distanceAndSkiddingToXY(placement, rects, offset) {\n  var basePlacement = getBasePlacement(placement);\n  var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;\n\n  var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {\n    placement: placement\n  })) : offset,\n      skidding = _ref[0],\n      distance = _ref[1];\n\n  skidding = skidding || 0;\n  distance = (distance || 0) * invertDistance;\n  return [left, right].indexOf(basePlacement) >= 0 ? {\n    x: distance,\n    y: skidding\n  } : {\n    x: skidding,\n    y: distance\n  };\n}\n\nfunction offset(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options,\n      name = _ref2.name;\n  var _options$offset = options.offset,\n      offset = _options$offset === void 0 ? [0, 0] : _options$offset;\n  var data = placements.reduce(function (acc, placement) {\n    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);\n    return acc;\n  }, {});\n  var _data$state$placement = data[state.placement],\n      x = _data$state$placement.x,\n      y = _data$state$placement.y;\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.modifiersData.popperOffsets.x += x;\n    state.modifiersData.popperOffsets.y += y;\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'offset',\n  enabled: true,\n  phase: 'main',\n  requires: ['popperOffsets'],\n  fn: offset\n};","map":{"version":3,"sources":["/Users/jonas/Documents/GitHub/OpenArabic/frontend/node_modules/@popperjs/core/lib/modifiers/offset.js"],"names":["getBasePlacement","top","left","right","placements","distanceAndSkiddingToXY","placement","rects","offset","basePlacement","invertDistance","indexOf","_ref","Object","assign","skidding","distance","x","y","_ref2","state","options","name","_options$offset","data","reduce","acc","_data$state$placement","modifiersData","popperOffsets","enabled","phase","requires","fn"],"mappings":"AAAA,OAAOA,gBAAP,MAA6B,8BAA7B;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,KAApB,EAA2BC,UAA3B,QAA6C,aAA7C;AACA,OAAO,SAASC,uBAAT,CAAiCC,SAAjC,EAA4CC,KAA5C,EAAmDC,MAAnD,EAA2D;AAChE,MAAIC,aAAa,GAAGT,gBAAgB,CAACM,SAAD,CAApC;AACA,MAAII,cAAc,GAAG,CAACR,IAAD,EAAOD,GAAP,EAAYU,OAAZ,CAAoBF,aAApB,KAAsC,CAAtC,GAA0C,CAAC,CAA3C,GAA+C,CAApE;;AAEA,MAAIG,IAAI,GAAG,OAAOJ,MAAP,KAAkB,UAAlB,GAA+BA,MAAM,CAACK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,KAAlB,EAAyB;AACxED,IAAAA,SAAS,EAAEA;AAD6D,GAAzB,CAAD,CAArC,GAELE,MAFN;AAAA,MAGIO,QAAQ,GAAGH,IAAI,CAAC,CAAD,CAHnB;AAAA,MAIII,QAAQ,GAAGJ,IAAI,CAAC,CAAD,CAJnB;;AAMAG,EAAAA,QAAQ,GAAGA,QAAQ,IAAI,CAAvB;AACAC,EAAAA,QAAQ,GAAG,CAACA,QAAQ,IAAI,CAAb,IAAkBN,cAA7B;AACA,SAAO,CAACR,IAAD,EAAOC,KAAP,EAAcQ,OAAd,CAAsBF,aAAtB,KAAwC,CAAxC,GAA4C;AACjDQ,IAAAA,CAAC,EAAED,QAD8C;AAEjDE,IAAAA,CAAC,EAAEH;AAF8C,GAA5C,GAGH;AACFE,IAAAA,CAAC,EAAEF,QADD;AAEFG,IAAAA,CAAC,EAAEF;AAFD,GAHJ;AAOD;;AAED,SAASR,MAAT,CAAgBW,KAAhB,EAAuB;AACrB,MAAIC,KAAK,GAAGD,KAAK,CAACC,KAAlB;AAAA,MACIC,OAAO,GAAGF,KAAK,CAACE,OADpB;AAAA,MAEIC,IAAI,GAAGH,KAAK,CAACG,IAFjB;AAGA,MAAIC,eAAe,GAAGF,OAAO,CAACb,MAA9B;AAAA,MACIA,MAAM,GAAGe,eAAe,KAAK,KAAK,CAAzB,GAA6B,CAAC,CAAD,EAAI,CAAJ,CAA7B,GAAsCA,eADnD;AAEA,MAAIC,IAAI,GAAGpB,UAAU,CAACqB,MAAX,CAAkB,UAAUC,GAAV,EAAepB,SAAf,EAA0B;AACrDoB,IAAAA,GAAG,CAACpB,SAAD,CAAH,GAAiBD,uBAAuB,CAACC,SAAD,EAAYc,KAAK,CAACb,KAAlB,EAAyBC,MAAzB,CAAxC;AACA,WAAOkB,GAAP;AACD,GAHU,EAGR,EAHQ,CAAX;AAIA,MAAIC,qBAAqB,GAAGH,IAAI,CAACJ,KAAK,CAACd,SAAP,CAAhC;AAAA,MACIW,CAAC,GAAGU,qBAAqB,CAACV,CAD9B;AAAA,MAEIC,CAAC,GAAGS,qBAAqB,CAACT,CAF9B;;AAIA,MAAIE,KAAK,CAACQ,aAAN,CAAoBC,aAApB,IAAqC,IAAzC,EAA+C;AAC7CT,IAAAA,KAAK,CAACQ,aAAN,CAAoBC,aAApB,CAAkCZ,CAAlC,IAAuCA,CAAvC;AACAG,IAAAA,KAAK,CAACQ,aAAN,CAAoBC,aAApB,CAAkCX,CAAlC,IAAuCA,CAAvC;AACD;;AAEDE,EAAAA,KAAK,CAACQ,aAAN,CAAoBN,IAApB,IAA4BE,IAA5B;AACD,C,CAAC;;;AAGF,eAAe;AACbF,EAAAA,IAAI,EAAE,QADO;AAEbQ,EAAAA,OAAO,EAAE,IAFI;AAGbC,EAAAA,KAAK,EAAE,MAHM;AAIbC,EAAAA,QAAQ,EAAE,CAAC,eAAD,CAJG;AAKbC,EAAAA,EAAE,EAAEzB;AALS,CAAf","sourcesContent":["import getBasePlacement from \"../utils/getBasePlacement.js\";\nimport { top, left, right, placements } from \"../enums.js\";\nexport function distanceAndSkiddingToXY(placement, rects, offset) {\n  var basePlacement = getBasePlacement(placement);\n  var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;\n\n  var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {\n    placement: placement\n  })) : offset,\n      skidding = _ref[0],\n      distance = _ref[1];\n\n  skidding = skidding || 0;\n  distance = (distance || 0) * invertDistance;\n  return [left, right].indexOf(basePlacement) >= 0 ? {\n    x: distance,\n    y: skidding\n  } : {\n    x: skidding,\n    y: distance\n  };\n}\n\nfunction offset(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options,\n      name = _ref2.name;\n  var _options$offset = options.offset,\n      offset = _options$offset === void 0 ? [0, 0] : _options$offset;\n  var data = placements.reduce(function (acc, placement) {\n    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);\n    return acc;\n  }, {});\n  var _data$state$placement = data[state.placement],\n      x = _data$state$placement.x,\n      y = _data$state$placement.y;\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.modifiersData.popperOffsets.x += x;\n    state.modifiersData.popperOffsets.y += y;\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'offset',\n  enabled: true,\n  phase: 'main',\n  requires: ['popperOffsets'],\n  fn: offset\n};"]},"metadata":{},"sourceType":"module"}