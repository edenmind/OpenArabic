{"ast":null,"code":"import computeOffsets from \"../utils/computeOffsets.js\";\n\nfunction popperOffsets(_ref) {\n  var state = _ref.state,\n      name = _ref.name; // Offsets are the actual position the popper needs to have to be\n  // properly positioned near its reference element\n  // This is the most basic placement, and will be adjusted by\n  // the modifiers in the next step\n\n  state.modifiersData[name] = computeOffsets({\n    reference: state.rects.reference,\n    element: state.rects.popper,\n    strategy: 'absolute',\n    placement: state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'popperOffsets',\n  enabled: true,\n  phase: 'read',\n  fn: popperOffsets,\n  data: {}\n};","map":{"version":3,"sources":["/Users/jonas/Documents/GitHub/OpenArabic/frontend/node_modules/@popperjs/core/lib/modifiers/popperOffsets.js"],"names":["computeOffsets","popperOffsets","_ref","state","name","modifiersData","reference","rects","element","popper","strategy","placement","enabled","phase","fn","data"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,4BAA3B;;AAEA,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,MAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;AAAA,MACIC,IAAI,GAAGF,IAAI,CAACE,IADhB,CAD2B,CAG3B;AACA;AACA;AACA;;AACAD,EAAAA,KAAK,CAACE,aAAN,CAAoBD,IAApB,IAA4BJ,cAAc,CAAC;AACzCM,IAAAA,SAAS,EAAEH,KAAK,CAACI,KAAN,CAAYD,SADkB;AAEzCE,IAAAA,OAAO,EAAEL,KAAK,CAACI,KAAN,CAAYE,MAFoB;AAGzCC,IAAAA,QAAQ,EAAE,UAH+B;AAIzCC,IAAAA,SAAS,EAAER,KAAK,CAACQ;AAJwB,GAAD,CAA1C;AAMD,C,CAAC;;;AAGF,eAAe;AACbP,EAAAA,IAAI,EAAE,eADO;AAEbQ,EAAAA,OAAO,EAAE,IAFI;AAGbC,EAAAA,KAAK,EAAE,MAHM;AAIbC,EAAAA,EAAE,EAAEb,aAJS;AAKbc,EAAAA,IAAI,EAAE;AALO,CAAf","sourcesContent":["import computeOffsets from \"../utils/computeOffsets.js\";\n\nfunction popperOffsets(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  // Offsets are the actual position the popper needs to have to be\n  // properly positioned near its reference element\n  // This is the most basic placement, and will be adjusted by\n  // the modifiers in the next step\n  state.modifiersData[name] = computeOffsets({\n    reference: state.rects.reference,\n    element: state.rects.popper,\n    strategy: 'absolute',\n    placement: state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'popperOffsets',\n  enabled: true,\n  phase: 'read',\n  fn: popperOffsets,\n  data: {}\n};"]},"metadata":{},"sourceType":"module"}