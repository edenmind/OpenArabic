{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"checkedIcon\", \"color\", \"icon\", \"name\", \"onChange\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport RadioButtonIcon from './RadioButtonIcon';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport useRadioGroup from '../RadioGroup/useRadioGroup';\nimport radioClasses, { getRadioUtilityClass } from './radioClasses';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`]\n  };\n  return _extends({}, classes, composeClasses(slots, getRadioUtilityClass, classes));\n};\n\nconst RadioRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiRadio',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(_ref => {\n  let {\n    theme,\n    ownerState\n  } = _ref;\n  return _extends({\n    color: theme.palette.text.secondary,\n    '&:hover': {\n      backgroundColor: alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }\n  }, ownerState.color !== 'default' && {\n    [`&.${radioClasses.checked}`]: {\n      color: theme.palette[ownerState.color].main\n    }\n  }, {\n    [`&.${radioClasses.disabled}`]: {\n      color: theme.palette.action.disabled\n    }\n  });\n});\n\nfunction areEqualValues(a, b) {\n  if (typeof b === 'object' && b !== null) {\n    return a === b;\n  } // The value could be a number, the DOM will stringify it anyway.\n\n\n  return String(a) === String(b);\n}\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {\n  checked: true\n});\n\nconst defaultIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {});\n\nconst Radio = /*#__PURE__*/React.forwardRef(function Radio(inProps, ref) {\n  var _defaultIcon$props$fo, _defaultCheckedIcon$p;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiRadio'\n  });\n\n  const {\n    checked: checkedProp,\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon = defaultIcon,\n    name: nameProp,\n    onChange: onChangeProp,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const radioGroup = useRadioGroup();\n  let checked = checkedProp;\n  const onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);\n  let name = nameProp;\n\n  if (radioGroup) {\n    if (typeof checked === 'undefined') {\n      checked = areEqualValues(radioGroup.value, props.value);\n    }\n\n    if (typeof name === 'undefined') {\n      name = radioGroup.name;\n    }\n  }\n\n  return /*#__PURE__*/_jsx(RadioRoot, _extends({\n    type: \"radio\",\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_defaultIcon$props$fo = defaultIcon.props.fontSize) != null ? _defaultIcon$props$fo : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(checkedIcon, {\n      fontSize: (_defaultCheckedIcon$p = defaultCheckedIcon.props.fontSize) != null ? _defaultCheckedIcon$p : size\n    }),\n    ownerState: ownerState,\n    classes: classes,\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <RadioButtonIcon checked />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <RadioButtonIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense radio styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Radio;","map":{"version":3,"sources":["/Users/jonas/Documents/GitHub/OpenArabic/frontend/node_modules/@mui/material/Radio/Radio.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","refType","unstable_composeClasses","composeClasses","alpha","SwitchBase","useThemeProps","RadioButtonIcon","capitalize","createChainedFunction","useRadioGroup","radioClasses","getRadioUtilityClass","styled","rootShouldForwardProp","jsx","_jsx","useUtilityClasses","ownerState","classes","color","slots","root","RadioRoot","shouldForwardProp","prop","name","slot","overridesResolver","props","styles","theme","palette","text","secondary","backgroundColor","action","active","main","hoverOpacity","checked","disabled","areEqualValues","a","b","String","defaultCheckedIcon","defaultIcon","Radio","forwardRef","inProps","ref","_defaultIcon$props$fo","_defaultCheckedIcon$p","checkedProp","checkedIcon","icon","nameProp","onChange","onChangeProp","size","other","radioGroup","value","type","cloneElement","fontSize","process","env","NODE_ENV","propTypes","bool","node","object","oneOfType","oneOf","string","disableRipple","id","inputProps","inputRef","func","required","sx","arrayOf","any"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"checkedIcon\", \"color\", \"icon\", \"name\", \"onChange\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport RadioButtonIcon from './RadioButtonIcon';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport useRadioGroup from '../RadioGroup/useRadioGroup';\nimport radioClasses, { getRadioUtilityClass } from './radioClasses';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`]\n  };\n  return _extends({}, classes, composeClasses(slots, getRadioUtilityClass, classes));\n};\n\nconst RadioRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiRadio',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: theme.palette.text.secondary,\n  '&:hover': {\n    backgroundColor: alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${radioClasses.checked}`]: {\n    color: theme.palette[ownerState.color].main\n  }\n}, {\n  [`&.${radioClasses.disabled}`]: {\n    color: theme.palette.action.disabled\n  }\n}));\n\nfunction areEqualValues(a, b) {\n  if (typeof b === 'object' && b !== null) {\n    return a === b;\n  } // The value could be a number, the DOM will stringify it anyway.\n\n\n  return String(a) === String(b);\n}\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {\n  checked: true\n});\n\nconst defaultIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {});\n\nconst Radio = /*#__PURE__*/React.forwardRef(function Radio(inProps, ref) {\n  var _defaultIcon$props$fo, _defaultCheckedIcon$p;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiRadio'\n  });\n\n  const {\n    checked: checkedProp,\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon = defaultIcon,\n    name: nameProp,\n    onChange: onChangeProp,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const radioGroup = useRadioGroup();\n  let checked = checkedProp;\n  const onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);\n  let name = nameProp;\n\n  if (radioGroup) {\n    if (typeof checked === 'undefined') {\n      checked = areEqualValues(radioGroup.value, props.value);\n    }\n\n    if (typeof name === 'undefined') {\n      name = radioGroup.name;\n    }\n  }\n\n  return /*#__PURE__*/_jsx(RadioRoot, _extends({\n    type: \"radio\",\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_defaultIcon$props$fo = defaultIcon.props.fontSize) != null ? _defaultIcon$props$fo : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(checkedIcon, {\n      fontSize: (_defaultCheckedIcon$p = defaultCheckedIcon.props.fontSize) != null ? _defaultCheckedIcon$p : size\n    }),\n    ownerState: ownerState,\n    classes: classes,\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <RadioButtonIcon checked />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <RadioButtonIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense radio styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Radio;"]},"metadata":{},"sourceType":"module"}