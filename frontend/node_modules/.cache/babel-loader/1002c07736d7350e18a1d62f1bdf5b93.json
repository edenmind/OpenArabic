{"ast":null,"code":"import { top, bottom, left, right } from \"../enums.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\n\nfunction getSideOffsets(overflow, rect, preventedOffsets) {\n  if (preventedOffsets === void 0) {\n    preventedOffsets = {\n      x: 0,\n      y: 0\n    };\n  }\n\n  return {\n    top: overflow.top - rect.height - preventedOffsets.y,\n    right: overflow.right - rect.width + preventedOffsets.x,\n    bottom: overflow.bottom - rect.height + preventedOffsets.y,\n    left: overflow.left - rect.width - preventedOffsets.x\n  };\n}\n\nfunction isAnySideFullyClipped(overflow) {\n  return [top, right, bottom, left].some(function (side) {\n    return overflow[side] >= 0;\n  });\n}\n\nfunction hide(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var preventedOffsets = state.modifiersData.preventOverflow;\n  var referenceOverflow = detectOverflow(state, {\n    elementContext: 'reference'\n  });\n  var popperAltOverflow = detectOverflow(state, {\n    altBoundary: true\n  });\n  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);\n  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);\n  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);\n  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);\n  state.modifiersData[name] = {\n    referenceClippingOffsets: referenceClippingOffsets,\n    popperEscapeOffsets: popperEscapeOffsets,\n    isReferenceHidden: isReferenceHidden,\n    hasPopperEscaped: hasPopperEscaped\n  };\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-reference-hidden': isReferenceHidden,\n    'data-popper-escaped': hasPopperEscaped\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'hide',\n  enabled: true,\n  phase: 'main',\n  requiresIfExists: ['preventOverflow'],\n  fn: hide\n};","map":{"version":3,"sources":["/Users/jonas/Documents/GitHub/OpenArabic/frontend/node_modules/@popperjs/core/lib/modifiers/hide.js"],"names":["top","bottom","left","right","detectOverflow","getSideOffsets","overflow","rect","preventedOffsets","x","y","height","width","isAnySideFullyClipped","some","side","hide","_ref","state","name","referenceRect","rects","reference","popperRect","popper","modifiersData","preventOverflow","referenceOverflow","elementContext","popperAltOverflow","altBoundary","referenceClippingOffsets","popperEscapeOffsets","isReferenceHidden","hasPopperEscaped","attributes","Object","assign","enabled","phase","requiresIfExists","fn"],"mappings":"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","sourcesContent":["import { top, bottom, left, right } from \"../enums.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\n\nfunction getSideOffsets(overflow, rect, preventedOffsets) {\n  if (preventedOffsets === void 0) {\n    preventedOffsets = {\n      x: 0,\n      y: 0\n    };\n  }\n\n  return {\n    top: overflow.top - rect.height - preventedOffsets.y,\n    right: overflow.right - rect.width + preventedOffsets.x,\n    bottom: overflow.bottom - rect.height + preventedOffsets.y,\n    left: overflow.left - rect.width - preventedOffsets.x\n  };\n}\n\nfunction isAnySideFullyClipped(overflow) {\n  return [top, right, bottom, left].some(function (side) {\n    return overflow[side] >= 0;\n  });\n}\n\nfunction hide(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var preventedOffsets = state.modifiersData.preventOverflow;\n  var referenceOverflow = detectOverflow(state, {\n    elementContext: 'reference'\n  });\n  var popperAltOverflow = detectOverflow(state, {\n    altBoundary: true\n  });\n  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);\n  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);\n  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);\n  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);\n  state.modifiersData[name] = {\n    referenceClippingOffsets: referenceClippingOffsets,\n    popperEscapeOffsets: popperEscapeOffsets,\n    isReferenceHidden: isReferenceHidden,\n    hasPopperEscaped: hasPopperEscaped\n  };\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-reference-hidden': isReferenceHidden,\n    'data-popper-escaped': hasPopperEscaped\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'hide',\n  enabled: true,\n  phase: 'main',\n  requiresIfExists: ['preventOverflow'],\n  fn: hide\n};"]},"metadata":{},"sourceType":"module"}