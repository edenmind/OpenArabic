{"ast":null,"code":"import * as React from 'react';\nimport setRef from './setRef';\nexport default function useForkRef(refA, refB) {\n  /**\n   * This will create a new function if the ref props change and are defined.\n   * This means react will call the old forkRef with `null` and the new forkRef\n   * with the ref. Cleanup naturally emerges from this behavior.\n   */\n  return React.useMemo(() => {\n    if (refA == null && refB == null) {\n      return null;\n    }\n\n    return refValue => {\n      setRef(refA, refValue);\n      setRef(refB, refValue);\n    };\n  }, [refA, refB]);\n}","map":{"version":3,"sources":["/Users/jonas/Documents/GitHub/OpenArabic/frontend/node_modules/@mui/utils/esm/useForkRef.js"],"names":["React","setRef","useForkRef","refA","refB","useMemo","refValue"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,eAAe,SAASC,UAAT,CAAoBC,IAApB,EAA0BC,IAA1B,EAAgC;AAC7C;AACF;AACA;AACA;AACA;AACE,SAAOJ,KAAK,CAACK,OAAN,CAAc,MAAM;AACzB,QAAIF,IAAI,IAAI,IAAR,IAAgBC,IAAI,IAAI,IAA5B,EAAkC;AAChC,aAAO,IAAP;AACD;;AAED,WAAOE,QAAQ,IAAI;AACjBL,MAAAA,MAAM,CAACE,IAAD,EAAOG,QAAP,CAAN;AACAL,MAAAA,MAAM,CAACG,IAAD,EAAOE,QAAP,CAAN;AACD,KAHD;AAID,GATM,EASJ,CAACH,IAAD,EAAOC,IAAP,CATI,CAAP;AAUD","sourcesContent":["import * as React from 'react';\nimport setRef from './setRef';\nexport default function useForkRef(refA, refB) {\n  /**\n   * This will create a new function if the ref props change and are defined.\n   * This means react will call the old forkRef with `null` and the new forkRef\n   * with the ref. Cleanup naturally emerges from this behavior.\n   */\n  return React.useMemo(() => {\n    if (refA == null && refB == null) {\n      return null;\n    }\n\n    return refValue => {\n      setRef(refA, refValue);\n      setRef(refB, refValue);\n    };\n  }, [refA, refB]);\n}"]},"metadata":{},"sourceType":"module"}