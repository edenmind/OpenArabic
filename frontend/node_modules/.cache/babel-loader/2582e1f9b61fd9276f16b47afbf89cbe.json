{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"anchor\", \"classes\", \"className\", \"width\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport styled from '../styles/styled';\nimport capitalize from '../utils/capitalize';\nimport { isHorizontal } from '../Drawer/Drawer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SwipeAreaRoot = styled('div', {\n  skipSx: true\n})(_ref => {\n  let {\n    theme,\n    ownerState\n  } = _ref;\n  return _extends({\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    zIndex: theme.zIndex.drawer - 1\n  }, ownerState.anchor === 'left' && {\n    right: 'auto'\n  }, ownerState.anchor === 'right' && {\n    left: 'auto',\n    right: 0\n  }, ownerState.anchor === 'top' && {\n    bottom: 'auto',\n    right: 0\n  }, ownerState.anchor === 'bottom' && {\n    top: 'auto',\n    bottom: 0,\n    right: 0\n  });\n});\n/**\n * @ignore - internal component.\n */\n\nconst SwipeArea = /*#__PURE__*/React.forwardRef(function SwipeArea(props, ref) {\n  const {\n    anchor,\n    classes = {},\n    className,\n    width,\n    style\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(SwipeAreaRoot, _extends({\n    className: clsx('PrivateSwipeArea-root', classes.root, classes[`anchor${capitalize(anchor)}`], className),\n    ref: ref,\n    style: _extends({\n      [isHorizontal(anchor) ? 'width' : 'height']: width\n    }, style),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeArea.propTypes = {\n  /**\n   * Side on which to attach the discovery area.\n   */\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']).isRequired,\n\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The width of the left most (or right most) area in `px` where the\n   * drawer can be swiped open from.\n   */\n  width: PropTypes.number.isRequired\n} : void 0;\nexport default SwipeArea;","map":{"version":3,"sources":["/Users/jonas/Documents/GitHub/OpenArabic/frontend/node_modules/@mui/material/SwipeableDrawer/SwipeArea.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","clsx","styled","capitalize","isHorizontal","jsx","_jsx","SwipeAreaRoot","skipSx","theme","ownerState","position","top","left","bottom","zIndex","drawer","anchor","right","SwipeArea","forwardRef","props","ref","classes","className","width","style","other","root","process","env","NODE_ENV","propTypes","oneOf","isRequired","object","string","number"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"anchor\", \"classes\", \"className\", \"width\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport styled from '../styles/styled';\nimport capitalize from '../utils/capitalize';\nimport { isHorizontal } from '../Drawer/Drawer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SwipeAreaRoot = styled('div', {\n  skipSx: true\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  bottom: 0,\n  zIndex: theme.zIndex.drawer - 1\n}, ownerState.anchor === 'left' && {\n  right: 'auto'\n}, ownerState.anchor === 'right' && {\n  left: 'auto',\n  right: 0\n}, ownerState.anchor === 'top' && {\n  bottom: 'auto',\n  right: 0\n}, ownerState.anchor === 'bottom' && {\n  top: 'auto',\n  bottom: 0,\n  right: 0\n}));\n/**\n * @ignore - internal component.\n */\n\nconst SwipeArea = /*#__PURE__*/React.forwardRef(function SwipeArea(props, ref) {\n  const {\n    anchor,\n    classes = {},\n    className,\n    width,\n    style\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(SwipeAreaRoot, _extends({\n    className: clsx('PrivateSwipeArea-root', classes.root, classes[`anchor${capitalize(anchor)}`], className),\n    ref: ref,\n    style: _extends({\n      [isHorizontal(anchor) ? 'width' : 'height']: width\n    }, style),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeArea.propTypes = {\n  /**\n   * Side on which to attach the discovery area.\n   */\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']).isRequired,\n\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The width of the left most (or right most) area in `px` where the\n   * drawer can be swiped open from.\n   */\n  width: PropTypes.number.isRequired\n} : void 0;\nexport default SwipeArea;"]},"metadata":{},"sourceType":"module"}