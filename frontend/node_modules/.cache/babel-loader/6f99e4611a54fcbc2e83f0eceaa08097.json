{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction Ripple(props) {\n  const {\n    className,\n    classes,\n    pulsate = false,\n    rippleX,\n    rippleY,\n    rippleSize,\n    in: inProp,\n    onExited,\n    timeout\n  } = props;\n  const [leaving, setLeaving] = React.useState(false);\n  const rippleClassName = clsx(className, classes.ripple, classes.rippleVisible, pulsate && classes.ripplePulsate);\n  const rippleStyles = {\n    width: rippleSize,\n    height: rippleSize,\n    top: -(rippleSize / 2) + rippleY,\n    left: -(rippleSize / 2) + rippleX\n  };\n  const childClassName = clsx(classes.child, leaving && classes.childLeaving, pulsate && classes.childPulsate);\n\n  if (!inProp && !leaving) {\n    setLeaving(true);\n  }\n\n  React.useEffect(() => {\n    if (!inProp && onExited != null) {\n      // react-transition-group#onExited\n      const timeoutId = setTimeout(onExited, timeout);\n      return () => {\n        clearTimeout(timeoutId);\n      };\n    }\n\n    return undefined;\n  }, [onExited, inProp, timeout]);\n  return /*#__PURE__*/_jsx(\"span\", {\n    className: rippleClassName,\n    style: rippleStyles,\n    children: /*#__PURE__*/_jsx(\"span\", {\n      className: childClassName\n    })\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Ripple.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n\n  /**\n   * @ignore - injected from TransitionGroup\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore - injected from TransitionGroup\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * If `true`, the ripple pulsates, typically indicating the keyboard focus state of an element.\n   */\n  pulsate: PropTypes.bool,\n\n  /**\n   * Diameter of the ripple.\n   */\n  rippleSize: PropTypes.number,\n\n  /**\n   * Horizontal position of the ripple center.\n   */\n  rippleX: PropTypes.number,\n\n  /**\n   * Vertical position of the ripple center.\n   */\n  rippleY: PropTypes.number,\n\n  /**\n   * exit delay\n   */\n  timeout: PropTypes.number.isRequired\n} : void 0;\nexport default Ripple;","map":{"version":3,"sources":["/Users/jonas/Documents/GitHub/OpenArabic/frontend/node_modules/@mui/material/ButtonBase/Ripple.js"],"names":["React","PropTypes","clsx","jsx","_jsx","Ripple","props","className","classes","pulsate","rippleX","rippleY","rippleSize","in","inProp","onExited","timeout","leaving","setLeaving","useState","rippleClassName","ripple","rippleVisible","ripplePulsate","rippleStyles","width","height","top","left","childClassName","child","childLeaving","childPulsate","useEffect","timeoutId","setTimeout","clearTimeout","undefined","style","children","process","env","NODE_ENV","propTypes","object","isRequired","string","bool","func","number"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction Ripple(props) {\n  const {\n    className,\n    classes,\n    pulsate = false,\n    rippleX,\n    rippleY,\n    rippleSize,\n    in: inProp,\n    onExited,\n    timeout\n  } = props;\n  const [leaving, setLeaving] = React.useState(false);\n  const rippleClassName = clsx(className, classes.ripple, classes.rippleVisible, pulsate && classes.ripplePulsate);\n  const rippleStyles = {\n    width: rippleSize,\n    height: rippleSize,\n    top: -(rippleSize / 2) + rippleY,\n    left: -(rippleSize / 2) + rippleX\n  };\n  const childClassName = clsx(classes.child, leaving && classes.childLeaving, pulsate && classes.childPulsate);\n\n  if (!inProp && !leaving) {\n    setLeaving(true);\n  }\n\n  React.useEffect(() => {\n    if (!inProp && onExited != null) {\n      // react-transition-group#onExited\n      const timeoutId = setTimeout(onExited, timeout);\n      return () => {\n        clearTimeout(timeoutId);\n      };\n    }\n\n    return undefined;\n  }, [onExited, inProp, timeout]);\n  return /*#__PURE__*/_jsx(\"span\", {\n    className: rippleClassName,\n    style: rippleStyles,\n    children: /*#__PURE__*/_jsx(\"span\", {\n      className: childClassName\n    })\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Ripple.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n\n  /**\n   * @ignore - injected from TransitionGroup\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore - injected from TransitionGroup\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * If `true`, the ripple pulsates, typically indicating the keyboard focus state of an element.\n   */\n  pulsate: PropTypes.bool,\n\n  /**\n   * Diameter of the ripple.\n   */\n  rippleSize: PropTypes.number,\n\n  /**\n   * Horizontal position of the ripple center.\n   */\n  rippleX: PropTypes.number,\n\n  /**\n   * Vertical position of the ripple center.\n   */\n  rippleY: PropTypes.number,\n\n  /**\n   * exit delay\n   */\n  timeout: PropTypes.number.isRequired\n} : void 0;\nexport default Ripple;"]},"metadata":{},"sourceType":"module"}