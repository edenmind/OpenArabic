{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"classes\", \"className\", \"label\", \"notched\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '../styles/styled';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NotchedOutlineRoot = styled('fieldset')({\n  textAlign: 'left',\n  position: 'absolute',\n  bottom: 0,\n  right: 0,\n  top: -5,\n  left: 0,\n  margin: 0,\n  padding: '0 8px',\n  pointerEvents: 'none',\n  borderRadius: 'inherit',\n  borderStyle: 'solid',\n  borderWidth: 1,\n  overflow: 'hidden',\n  minWidth: '0%'\n});\nconst NotchedOutlineLegend = styled('legend', {\n  skipSx: true\n})(_ref => {\n  let {\n    ownerState,\n    theme\n  } = _ref;\n  return _extends({\n    float: 'unset'\n  }, ownerState.label === undefined && {\n    padding: 0,\n    lineHeight: '11px',\n    // sync with `height` in `legend` styles\n    transition: theme.transitions.create('width', {\n      duration: 150,\n      easing: theme.transitions.easing.easeOut\n    })\n  }, ownerState.label !== undefined && _extends({\n    display: 'block',\n    // Fix conflict with normalize.css and sanitize.css\n    width: 'auto',\n    // Fix conflict with bootstrap\n    padding: 0,\n    height: 11,\n    // sync with `lineHeight` in `legend` styles\n    fontSize: '0.75em',\n    visibility: 'hidden',\n    maxWidth: 0.01,\n    transition: theme.transitions.create('max-width', {\n      duration: 50,\n      easing: theme.transitions.easing.easeOut\n    }),\n    whiteSpace: 'nowrap',\n    '& > span': {\n      paddingLeft: 5,\n      paddingRight: 5,\n      display: 'inline-block'\n    }\n  }, ownerState.notched && {\n    maxWidth: '100%',\n    transition: theme.transitions.create('max-width', {\n      duration: 100,\n      easing: theme.transitions.easing.easeOut,\n      delay: 50\n    })\n  }));\n});\n/**\n * @ignore - internal component.\n */\n\nexport default function NotchedOutline(props) {\n  const {\n    className,\n    label,\n    notched\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    notched,\n    label\n  });\n\n  return /*#__PURE__*/_jsx(NotchedOutlineRoot, _extends({\n    \"aria-hidden\": true,\n    className: className,\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(NotchedOutlineLegend, {\n      ownerState: ownerState,\n      children: label ? /*#__PURE__*/_jsx(\"span\", {\n        children: label\n      }) :\n      /*#__PURE__*/\n      // notranslate needed while Google Translate will not fix zero-width space issue\n      // eslint-disable-next-line react/no-danger\n      _jsx(\"span\", {\n        className: \"notranslate\",\n        dangerouslySetInnerHTML: {\n          __html: '&#8203;'\n        }\n      })\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? NotchedOutline.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * If `true`, the outline is notched to accommodate the label.\n   */\n  notched: PropTypes.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;","map":{"version":3,"sources":["/Users/jonas/Documents/GitHub/OpenArabic/frontend/node_modules/@mui/material/OutlinedInput/NotchedOutline.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","styled","jsx","_jsx","NotchedOutlineRoot","textAlign","position","bottom","right","top","left","margin","padding","pointerEvents","borderRadius","borderStyle","borderWidth","overflow","minWidth","NotchedOutlineLegend","skipSx","ownerState","theme","float","label","undefined","lineHeight","transition","transitions","create","duration","easing","easeOut","display","width","height","fontSize","visibility","maxWidth","whiteSpace","paddingLeft","paddingRight","notched","delay","NotchedOutline","props","className","other","children","dangerouslySetInnerHTML","__html","process","env","NODE_ENV","propTypes","node","classes","object","string","bool","isRequired","style"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"classes\", \"className\", \"label\", \"notched\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '../styles/styled';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NotchedOutlineRoot = styled('fieldset')({\n  textAlign: 'left',\n  position: 'absolute',\n  bottom: 0,\n  right: 0,\n  top: -5,\n  left: 0,\n  margin: 0,\n  padding: '0 8px',\n  pointerEvents: 'none',\n  borderRadius: 'inherit',\n  borderStyle: 'solid',\n  borderWidth: 1,\n  overflow: 'hidden',\n  minWidth: '0%'\n});\nconst NotchedOutlineLegend = styled('legend', {\n  skipSx: true\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  float: 'unset'\n}, ownerState.label === undefined && {\n  padding: 0,\n  lineHeight: '11px',\n  // sync with `height` in `legend` styles\n  transition: theme.transitions.create('width', {\n    duration: 150,\n    easing: theme.transitions.easing.easeOut\n  })\n}, ownerState.label !== undefined && _extends({\n  display: 'block',\n  // Fix conflict with normalize.css and sanitize.css\n  width: 'auto',\n  // Fix conflict with bootstrap\n  padding: 0,\n  height: 11,\n  // sync with `lineHeight` in `legend` styles\n  fontSize: '0.75em',\n  visibility: 'hidden',\n  maxWidth: 0.01,\n  transition: theme.transitions.create('max-width', {\n    duration: 50,\n    easing: theme.transitions.easing.easeOut\n  }),\n  whiteSpace: 'nowrap',\n  '& > span': {\n    paddingLeft: 5,\n    paddingRight: 5,\n    display: 'inline-block'\n  }\n}, ownerState.notched && {\n  maxWidth: '100%',\n  transition: theme.transitions.create('max-width', {\n    duration: 100,\n    easing: theme.transitions.easing.easeOut,\n    delay: 50\n  })\n})));\n/**\n * @ignore - internal component.\n */\n\nexport default function NotchedOutline(props) {\n  const {\n    className,\n    label,\n    notched\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    notched,\n    label\n  });\n\n  return /*#__PURE__*/_jsx(NotchedOutlineRoot, _extends({\n    \"aria-hidden\": true,\n    className: className,\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(NotchedOutlineLegend, {\n      ownerState: ownerState,\n      children: label ? /*#__PURE__*/_jsx(\"span\", {\n        children: label\n      }) :\n      /*#__PURE__*/\n      // notranslate needed while Google Translate will not fix zero-width space issue\n      // eslint-disable-next-line react/no-danger\n      _jsx(\"span\", {\n        className: \"notranslate\",\n        dangerouslySetInnerHTML: {\n          __html: '&#8203;'\n        }\n      })\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? NotchedOutline.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * If `true`, the outline is notched to accommodate the label.\n   */\n  notched: PropTypes.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;"]},"metadata":{},"sourceType":"module"}